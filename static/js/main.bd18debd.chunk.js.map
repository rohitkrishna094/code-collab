{"version":3,"sources":["components/CodeEditor/editorData.tsx","api/apiInfo.ts","utils/index.ts","components/CodeEditor/CodeEditor.tsx","components/DrawingPad/DrawingPad.tsx","hooks/useQuery.ts","components/playground/PlayGround.tsx","components/Home/Home.tsx","App.tsx","index.tsx"],"names":["defaultJava","defaultCSharp","defaultPython","defaultKotlin","defaultClojure","defaultC","defaultCpp","defaultErlang","defaultJavascript","defaultRuby","defaultTypescript","defaultPhp","defaultGo","languageDataWithKeys","languageId","name","mode","defaultValue","themes","baseUrl","process","REACT_APP_BASE_URL","apiUrl","judgeUrl","delay","ms","Promise","res","setTimeout","CodeEditor","socket","userName","useState","setMode","langId","setLangId","id","data","getDefaultMode","codeValue","setCodeValue","theme","setTheme","isCompiling","setIsCompiling","setIsError","setCodeError","type","payload","stdoutOutput","setStdoutOutput","useRef","on","newValue","newMode","newCodeValue","submitCode","sourceCode","a","axios","request","method","url","response","console","log","token","onRunClick","deepClonedObject","cloneDeep","push","then","stderr","status","stdout","compileOutput","compile_output","includes","result","catch","error","Terminal","color","minWidth","width","flex","bg","padding","direction","map","item","length","Math","random","userWhoRan","newLangId","langName","as","height","className","defaultSize","style","borderRight","maxWidth","enable","top","right","bottom","left","topRight","bottomRight","bottomLeft","topLeft","position","colorScheme","size","onClick","disabled","fontSize","cursor","ml","borderRadius","value","onChange","e","target","langData","emit","Object","keys","backgroundColor","newTheme","_theme","editorProps","$blockScrolling","showPrintMargin","showGutter","highlightActiveLine","focus","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","DrawingPad","canvasWidth","canvasHeight","brushRadius","brushColor","catenaryColor","gridColor","useQuery","URLSearchParams","useLocation","search","PlayGround","tabOptions","icon","roomId","useParams","get","toast","useToast","io","connect","title","isClosable","useEffect","room","variant","bgColor","borderBottomColor","display","flexDirection","defaultIndex","isLazy","borderTop","borderLeft","borderBottom","_selected","border","borderTopColor","Home","history","useHistory","useDisclosure","isOpen","onOpen","onClose","setUserName","setRoomId","launchButtonDisabled","setLaunchButtonDisabled","onSessionLaunch","v4","alignItems","justifyContent","isCentered","mb","placeholder","mr","mt","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bd18debd.chunk.js","sourcesContent":["const defaultJava = `public class Main {\n  public static void main(String[] args) {\n      System.out.println(\"hello world\");\n  }\n}`;\n\nconst defaultCSharp = `public void HelloWorld() {\n    //Say Hello!\n    Console.WriteLine(\"Hello World\");\n}`;\n\nconst defaultPython = `def say_hello():\n    print('Hello, World')`;\n\nconst defaultKotlin = `fun main() {\n    println(\"Hello, World!\")\n}  `;\n\nconst defaultClojure = `(defn hello []\n    (prn \"Hello, World\")\n  )\n  \n(hello)`;\n\nconst defaultC = `#include <stdio.h>\n\nint main() {\n  printf(\"Hello, World\\\\n\");\n  return 0;\n}`;\n\nconst defaultCpp = `#include <iostream>\nusing namespace std;\n\nint main() {\n  cout << \"Hello World\";\n  return 0;\n}`;\n\nconst defaultErlang = `-module(solution). \n-export([start/0]). \n\nstart() -> \n   io:fwrite(\"Hello, world!\\\\n\").`;\n\nconst defaultJavascript = `console.log(\"hello world\");`;\n\nconst defaultRuby = `puts 'Hello World'`;\n\nconst defaultTypescript = `console.log(\"Hello World\")`;\n\nconst defaultPhp = `<?php\n  echo \"Hello, World\\\\n\";\n?>`;\n\nconst defaultGo = `package main\n\nimport \"fmt\"\n\nfunc main() {\n  fmt.Println(\"Hello, World!\")\n}`;\n\nexport const languageData = [\n  { languageId: 50, name: 'C', mode: 'c_cpp', defaultValue: defaultC },\n  { languageId: 54, name: 'C++', mode: 'c_cpp', defaultValue: defaultCpp },\n  {\n    languageId: 86,\n    name: 'Clojure',\n    mode: 'clojure',\n    defaultValue: defaultClojure,\n  },\n  { languageId: 51, name: 'C#', mode: 'csharp', defaultValue: defaultCSharp },\n  {\n    languageId: 58,\n    name: 'Erlang',\n    mode: 'erlang',\n    defaultValue: defaultErlang,\n  },\n  { languageId: 60, name: 'Go', mode: 'golang', defaultValue: defaultGo },\n  { languageId: 62, name: 'Java', mode: 'java', defaultValue: defaultJava },\n  {\n    languageId: 63,\n    name: 'Javascript',\n    mode: 'javascript',\n    defaultValue: defaultJavascript,\n  },\n  {\n    languageId: 78,\n    name: 'Kotlin',\n    mode: 'kotlin',\n    defaultValue: defaultKotlin,\n  },\n  { languageId: 68, name: 'PHP', mode: 'php', defaultValue: defaultPhp },\n  {\n    languageId: 71,\n    name: 'Python',\n    mode: 'python',\n    defaultValue: defaultPython,\n  },\n  { languageId: 72, name: 'Ruby', mode: 'ruby', defaultValue: defaultRuby },\n  {\n    languageId: 74,\n    name: 'Typescript',\n    mode: 'typescript',\n    defaultValue: defaultTypescript,\n  },\n];\n\ninterface Item {\n  languageId: number;\n  name: string;\n  mode: string;\n  defaultValue: string;\n}\n\nexport const languageDataWithKeys: { [key: string]: Item } = {\n  '50': { languageId: 50, name: 'C', mode: 'c_cpp', defaultValue: defaultC },\n  '54': {\n    languageId: 54,\n    name: 'C++',\n    mode: 'c_cpp',\n    defaultValue: defaultCpp,\n  },\n  '86': {\n    languageId: 86,\n    name: 'Clojure',\n    mode: 'clojure',\n    defaultValue: defaultClojure,\n  },\n  '51': {\n    languageId: 51,\n    name: 'C#',\n    mode: 'csharp',\n    defaultValue: defaultCSharp,\n  },\n  '58': {\n    languageId: 58,\n    name: 'Erlang',\n    mode: 'erlang',\n    defaultValue: defaultErlang,\n  },\n  '60': { languageId: 60, name: 'Go', mode: 'golang', defaultValue: defaultGo },\n  '62': {\n    languageId: 62,\n    name: 'Java',\n    mode: 'java',\n    defaultValue: defaultJava,\n  },\n  '63': {\n    languageId: 63,\n    name: 'Javascript',\n    mode: 'javascript',\n    defaultValue: defaultJavascript,\n  },\n  '78': {\n    languageId: 78,\n    name: 'Kotlin',\n    mode: 'kotlin',\n    defaultValue: defaultKotlin,\n  },\n  '68': { languageId: 68, name: 'PHP', mode: 'php', defaultValue: defaultPhp },\n  '71': {\n    languageId: 71,\n    name: 'Python',\n    mode: 'python',\n    defaultValue: defaultPython,\n  },\n  '72': {\n    languageId: 72,\n    name: 'Ruby',\n    mode: 'ruby',\n    defaultValue: defaultRuby,\n  },\n  '74': {\n    languageId: 74,\n    name: 'Typescript',\n    mode: 'typescript',\n    defaultValue: defaultTypescript,\n  },\n};\n\nexport const themes = [\n  'monokai',\n  'github',\n  'tomorrow_night',\n  'tomorrow',\n  'kuroir',\n  'twilight',\n  'xcode',\n  'textmate',\n  'solarized_dark',\n  'solarized_light',\n  'terminal',\n];\n","// change these - configurable\nexport const baseUrl =\n  process.env.REACT_APP_BASE_URL || 'http://localhost:8080';\n\nexport const apiUrl = `${baseUrl}/api`;\nexport const judgeUrl = `${apiUrl}/judge`;\n","export const delay = (ms: number) => new Promise(res => setTimeout(res, ms));\n","import React, { useEffect, useRef, useState } from 'react';\nimport AceEditor from 'react-ace';\nimport {\n  Box,\n  Button,\n  Flex,\n  HStack,\n  Select,\n  Spinner,\n  Text,\n} from '@chakra-ui/react';\nimport { cloneDeep } from 'lodash';\nimport axios from 'axios';\nimport { FaPlay } from 'react-icons/fa';\n// import 'ace-builds/src-min-noconflict/ext-language_tools';\n// import 'ace-builds/webpack-resolver';\nimport { themes, languageDataWithKeys } from './editorData';\nimport { judgeUrl } from '../../api/apiInfo';\nimport { delay } from '../../utils';\nimport { Resizable } from 're-resizable';\nimport { Ace } from 'ace-builds';\n\nimport 'ace-builds/src-noconflict/mode-c_cpp';\nimport 'ace-builds/src-noconflict/mode-clojure';\nimport 'ace-builds/src-noconflict/mode-csharp';\nimport 'ace-builds/src-noconflict/mode-erlang';\nimport 'ace-builds/src-noconflict/mode-golang';\nimport 'ace-builds/src-noconflict/mode-java';\nimport 'ace-builds/src-noconflict/mode-javascript';\nimport 'ace-builds/src-noconflict/mode-kotlin';\nimport 'ace-builds/src-noconflict/mode-php';\nimport 'ace-builds/src-noconflict/mode-python';\nimport 'ace-builds/src-noconflict/mode-ruby';\nimport 'ace-builds/src-noconflict/mode-typescript';\n\nimport 'ace-builds/src-noconflict/theme-monokai';\nimport 'ace-builds/src-noconflict/theme-github';\nimport 'ace-builds/src-noconflict/theme-tomorrow_night';\nimport 'ace-builds/src-noconflict/theme-tomorrow';\nimport 'ace-builds/src-noconflict/theme-kuroir';\nimport 'ace-builds/src-noconflict/theme-twilight';\nimport 'ace-builds/src-noconflict/theme-xcode';\nimport 'ace-builds/src-noconflict/theme-textmate';\nimport 'ace-builds/src-noconflict/theme-solarized_dark';\nimport 'ace-builds/src-noconflict/theme-solarized_light';\nimport 'ace-builds/src-noconflict/theme-terminal';\n\n// Object.keys(languageDataWithKeys).forEach(key => {\n//   const languageData = languageDataWithKeys[key];\n//   const { mode } = languageData;\n//   require(`ace-builds/src-noconflict/mode-${mode}`);\n//   require(`ace-builds/src-noconflict/snippets/${mode}`);\n// });\n// themes.forEach(theme => require(`ace-builds/src-noconflict/theme-${theme}`));\n\ninterface CodeEditorProps {\n  socket: SocketIOClient.Socket;\n  userName: string;\n}\n\n// socket io event types, S stands for socket io\ninterface SLanguageChangeEventInput {\n  id: number;\n  mode: string;\n  codeValue: string;\n  userName: string;\n}\n\nconst getDefaultMode = (id: string) => {\n  const data = languageDataWithKeys[id];\n  if (data && data.defaultValue) return data.defaultValue;\n};\n\nconst getDefaultLangId = () => 62;\n\nconst CodeEditor = ({ socket, userName }: CodeEditorProps) => {\n  const [mode, setMode] = useState('java');\n  const [langId, setLangId] = useState(getDefaultLangId());\n  const [codeValue, setCodeValue] = useState(getDefaultMode(langId + ''));\n  const [theme, setTheme] = useState('monokai');\n  const [isCompiling, setIsCompiling] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [codeError, setCodeError] = useState('');\n  const [stdoutOutput, setStdoutOutput] = useState<any>([\n    {\n      type: 'message',\n      payload: {\n        data: 'Environment is ready, just click run button and enjoy!',\n      },\n    },\n  ]);\n  const editorRef = useRef<any>(null);\n\n  socket.on('codechange', (newValue: string) => {\n    setCodeValue(newValue);\n  });\n\n  socket.on('language_change', (data: SLanguageChangeEventInput) => {\n    const { id, mode: newMode, codeValue: newCodeValue } = data;\n    setLangId(id);\n    setMode(newMode);\n    setCodeValue(newCodeValue);\n  });\n\n  // socket.on('codeselectionchange', (newRange: Ace.Range) => {\n  //   if (editorRef && editorRef.current) {\n  //     editorRef.current.editor.selection.setRange(newRange);\n  //   }\n  // });\n\n  // useEffect(() => {\n  //   editorRef?.current?.editor.gotoLine(4, 4);\n  // }, []);\n\n  const onChange = (newValue: any) => {\n    setCodeValue(newValue);\n    socket.emit('codechange', newValue);\n  };\n\n  const onLanguageChange = (e: React.ChangeEvent<HTMLSelectElement>): void => {\n    const id = e.target.value;\n    const langData = languageDataWithKeys[id];\n    const { mode: newMode, defaultValue: newCodeValue } = langData;\n    setLangId(+id);\n    setMode(newMode);\n    setCodeValue(newCodeValue);\n    socket.emit('language_change', {\n      id,\n      mode: newMode,\n      codeValue: newCodeValue,\n      userName,\n    });\n  };\n  // const onSelectionChange = (selection: any) => {\n  //   // const content = editorRef.current.editor.session.getTextRange(\n  //   //   selection.getRange(),\n  //   // );\n  //   socket.emit('codeselectionchange', selection.getRange());\n  // };\n\n  const submitCode = async (id: number, sourceCode: string | undefined) => {\n    const response: any = await axios.request({\n      method: 'POST',\n      url: `${judgeUrl}/submissions`,\n      data: {\n        languageId: id,\n        sourceCode: sourceCode,\n      },\n    });\n    console.log('compile: ', response);\n    return response.data.token;\n  };\n\n  // todo pull axios stuff into another util file and convert to async await\n  const onRunClick = async () => {\n    const language = languageDataWithKeys[langId].name;\n\n    const deepClonedObject = cloneDeep(stdoutOutput);\n    deepClonedObject.push({ type: 'coderun', payload: { userName, langId } });\n    setStdoutOutput(deepClonedObject);\n\n    setIsCompiling(true);\n    let token;\n    try {\n      token = await submitCode(langId, codeValue);\n    } catch (err) {\n      console.log(err);\n      setIsCompiling(false);\n      setCodeError(err);\n      setIsError(true);\n      return;\n    }\n    await delay(5000);\n    await axios\n      .request({\n        method: 'GET',\n        url: `${judgeUrl}/submissions/${token}`,\n      })\n      .then(response => {\n        const { data } = response.data;\n        const { stderr, status, stdout, compile_output: compileOutput } = data;\n        console.log('results', response);\n        if (status && [1, 2, 3].includes(status.id)) {\n          console.log(stdout);\n          setIsCompiling(false);\n          deepClonedObject.push({\n            type: 'coderunresult',\n            payload: { result: stdout },\n          });\n          setStdoutOutput(deepClonedObject);\n          console.log(deepClonedObject);\n          // setStdoutOutput([\n          //   ...stdoutOutput,\n          //   userRanPrompt,\n          //   <Text key={Math.random()}>{stdout}</Text>,\n          // ]);\n        } else if (compileOutput) {\n          console.log(compileOutput);\n          setIsCompiling(false);\n          setCodeError(stderr);\n          setIsError(true);\n        } else if (stderr) {\n          console.log(stderr);\n          setIsCompiling(false);\n          setCodeError(stderr);\n          setIsError(true);\n        } else {\n          console.log('something else happened');\n          setIsCompiling(false);\n        }\n      })\n      .catch(error => {\n        console.log(error);\n        setIsCompiling(false);\n        setIsError(true);\n      });\n  };\n  const Terminal = () => {\n    return (\n      <Flex\n        color='white'\n        minWidth='30%'\n        width='30%'\n        flex='1'\n        bg='#272822'\n        padding={5}\n        direction='column'\n      >\n        {stdoutOutput.map((item: any) => {\n          if (item.length === 3) console.log('object', item);\n          const { type, payload } = item;\n          if (type === 'message') {\n            const { data } = payload;\n            return <Text key={Math.random()}>{data}</Text>;\n          } else if (type === 'coderun') {\n            const { userName: userWhoRan, langId: newLangId } = payload;\n            const langName = languageDataWithKeys[newLangId]?.name;\n            return (\n              <Text key={Math.random()}>\n                User{' '}\n                <Text as='span' color='#3182CE'>\n                  {userWhoRan}\n                </Text>{' '}\n                ran\n                <Text as='span' color='#38A169'>\n                  {' '}\n                  {langName}\n                </Text>{' '}\n                code just now.\n              </Text>\n            );\n          } else if (type === 'coderunresult') {\n            const { result } = payload;\n            return <Text key={Math.random()}>{result}</Text>;\n          }\n          return null;\n        })}\n      </Flex>\n    );\n  };\n\n  return (\n    <Flex height='100%' width='100%' className='container'>\n      <Resizable\n        defaultSize={{\n          width: '70%',\n          height: '100%',\n        }}\n        style={{ borderRight: '10px solid #202020' }}\n        maxWidth='70%'\n        minWidth='30%'\n        enable={{\n          top: false,\n          right: true,\n          bottom: false,\n          left: false,\n          topRight: false,\n          bottomRight: false,\n          bottomLeft: false,\n          topLeft: false,\n        }}\n      >\n        <Flex\n          direction='column'\n          position='relative'\n          height='100%'\n          width='100%'\n          bg='cornsilk'\n          className='code-editor-comp'\n        >\n          <Flex\n            color='white'\n            padding='10px'\n            className='code-header'\n            bg='#202020'\n          >\n            <Button\n              colorScheme='blue'\n              size='sm'\n              onClick={onRunClick}\n              disabled={isCompiling}\n            >\n              <HStack>\n                <Box>Run</Box>\n                {isCompiling ? (\n                  <Spinner size='sm' />\n                ) : (\n                  <Box>\n                    <FaPlay fontSize='10px' />\n                  </Box>\n                )}\n              </HStack>\n            </Button>\n            <Select\n              cursor='pointer'\n              ml={5}\n              size='sm'\n              width='7rem'\n              borderRadius='0.375rem'\n              value={langId}\n              onChange={onLanguageChange}\n            >\n              {Object.keys(languageDataWithKeys).map(id => {\n                const langData = languageDataWithKeys[id];\n                return (\n                  <option\n                    key={id}\n                    value={id}\n                    style={{ backgroundColor: '#202020' }}\n                  >\n                    {langData.name}\n                  </option>\n                );\n              })}\n            </Select>\n            <Select\n              cursor='pointer'\n              ml={5}\n              size='sm'\n              width='10rem'\n              borderRadius='0.375rem'\n              value={theme}\n              onChange={e => {\n                const newTheme = e.target.value;\n                setTheme(newTheme);\n              }}\n            >\n              {themes.map(_theme => (\n                <option\n                  key={Math.random()}\n                  value={_theme}\n                  style={{ backgroundColor: '#202020' }}\n                >\n                  {_theme}\n                </option>\n              ))}\n            </Select>\n          </Flex>\n          <AceEditor\n            mode='java'\n            theme='monokai'\n            height='100%'\n            width='100%'\n            onChange={onChange}\n            name='CODEEDITOR'\n            editorProps={{ $blockScrolling: true }}\n            fontSize={14}\n            showPrintMargin={true}\n            showGutter={true}\n            highlightActiveLine={true}\n            focus={true}\n            setOptions={{\n              enableBasicAutocompletion: true,\n              enableLiveAutocompletion: true,\n              enableSnippets: true,\n              showLineNumbers: true,\n              tabSize: 2,\n            }}\n            value={codeValue}\n          />\n        </Flex>\n      </Resizable>\n      <Terminal />\n    </Flex>\n  );\n};\n\nexport default CodeEditor;\n","import { Flex } from '@chakra-ui/react';\nimport React, { useEffect, useRef } from 'react';\nimport CanvasDraw from 'react-canvas-draw';\nimport './DrawingPad.scss';\n\ninterface DrawingPadProps {\n  socket: SocketIOClient.Socket;\n}\n\nconst DrawingPad = ({ socket }: DrawingPadProps) => {\n  socket.on('codechange', (newValue: string) => {\n    // setCodeValue(newValue);\n  });\n\n  return (\n    <Flex height='100%' width='100%'>\n      <CanvasDraw\n        canvasWidth='100%'\n        canvasHeight='100%'\n        brushRadius={3}\n        brushColor='#3182CE'\n        catenaryColor={'#FFD500'}\n        gridColor={'rgba(0, 180, 216, 0.1)'}\n        backgroundColor='#272822'\n      />\n    </Flex>\n  );\n};\n\nexport default DrawingPad;\n","import { useLocation } from 'react-router-dom';\n\nconst useQuery = () => new URLSearchParams(useLocation().search);\n\nexport default useQuery;\n","import React, { useEffect } from 'react';\nimport {\n  Box,\n  Flex,\n  HStack,\n  Tab,\n  TabList,\n  TabPanel,\n  TabPanels,\n  Tabs,\n  useToast,\n} from '@chakra-ui/react';\nimport CodeEditor from '../CodeEditor/CodeEditor';\nimport DrawingPad from '../DrawingPad/DrawingPad';\nimport DrawingPadExcaliDraw from '../DrawingPadExcaliDraw/DrawingPadExcaliDraw';\nimport io from 'socket.io-client';\nimport { RiCodeSSlashLine, RiPencilFill } from 'react-icons/ri';\nimport './PlayGround.scss';\nimport { useParams } from 'react-router';\nimport { baseUrl } from '../../api/apiInfo';\nimport useQuery from '../../hooks/useQuery';\n\ninterface Params {\n  roomId: string;\n}\n\nconst PlayGround = () => {\n  const tabOptions = [\n    { value: 'Code', icon: <RiCodeSSlashLine /> },\n    { value: 'Draw', icon: <RiPencilFill /> },\n  ];\n  const { roomId }: Params = useParams();\n  const query: any = useQuery();\n  const name = query.get('user');\n  const toast = useToast();\n  const socket = io.connect(baseUrl);\n\n  socket.on('userjoined', (userName: string) => {\n    console.log(userName, 'joined');\n    toast({\n      title: `${userName} joined`,\n      status: 'success',\n      isClosable: true,\n    });\n  });\n\n  socket.on('userleft', (userName: string) => {\n    console.log(userName, 'left');\n    toast({\n      title: `${userName} left`,\n      status: 'error',\n      isClosable: true,\n    });\n  });\n\n  useEffect(() => {\n    const data = {\n      room: roomId,\n      name,\n    };\n    socket.emit('joinroom', data);\n  }, []);\n\n  return (\n    <Flex className='playground' height='100vh' width='100vw'>\n      <Tabs\n        variant='enclosed-colored'\n        bgColor='#272822'\n        borderBottomColor='#202020'\n        width='100%'\n        display='flex'\n        flexDirection='column'\n        defaultIndex={0}\n        isLazy\n      >\n        <TabList>\n          {tabOptions.map(item => (\n            <Tab\n              key={Math.random()}\n              className='tab_mine'\n              bg='#272822'\n              color='grey'\n              borderTop='none'\n              borderLeft='none'\n              borderRight='none'\n              borderBottom='none'\n              _selected={{\n                color: 'white',\n                bg: '#202020',\n                border: 'none',\n                borderTop: '3px solid green',\n                borderTopColor: 'blue.500',\n              }}\n            >\n              <HStack>\n                <Box>{item.icon}</Box>\n                <Box>{item.value}</Box>\n              </HStack>\n            </Tab>\n          ))}\n        </TabList>\n        <TabPanels flex='1 1 auto'>\n          <TabPanel padding={0} height='100%'>\n            <CodeEditor socket={socket} userName={name} />\n          </TabPanel>\n          <TabPanel padding={0} height='100%'>\n            <DrawingPad socket={socket} />\n            {/* <DrawingPadExcaliDraw /> */}\n          </TabPanel>\n        </TabPanels>\n      </Tabs>\n    </Flex>\n  );\n};\n\nexport default PlayGround;\n","import {\n  Button,\n  Flex,\n  Input,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  Spacer,\n  Text,\n  useDisclosure,\n} from '@chakra-ui/react';\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { v4 } from 'uuid';\n\nconst Home = () => {\n  const history = useHistory();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [userName, setUserName] = useState('');\n  const [roomId, setRoomId] = useState('');\n  const [launchButtonDisabled, setLaunchButtonDisabled] = useState(true);\n\n  const onChange = (e: any) => {\n    const name = e.target.value;\n    setUserName(name);\n    if (name && name.length > 0) setLaunchButtonDisabled(false);\n    else setLaunchButtonDisabled(true);\n  };\n\n  const onRoomIdChange = (e: any) => {\n    setRoomId(e.target.value);\n  };\n\n  const onSessionLaunch = (e: any) => {\n    const id = v4();\n    history.push(`${id}?user=${userName}`);\n  };\n\n  return (\n    <Flex\n      height='100vh'\n      width='100vw'\n      alignItems='center'\n      justifyContent='center'\n      bg='#272822'\n      //   bg='#202020'\n      direction='column'\n    >\n      <Button colorScheme='blue' onClick={onOpen}>\n        Launch Session\n      </Button>\n      <Modal isOpen={isOpen} onClose={onClose} isCentered>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>Launch a Collaborative Session</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody>\n            <Text mb={4} fontSize='md'>\n              Enter your Name:\n            </Text>\n            <Input\n              value={userName}\n              onChange={onChange}\n              placeholder='Ada Lovelace'\n            />\n          </ModalBody>\n\n          <ModalFooter>\n            <Button\n              colorScheme='blue'\n              mr={3}\n              onClick={onSessionLaunch}\n              disabled={launchButtonDisabled}\n            >\n              Launch\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n      <Button colorScheme='green' onClick={onOpen} mt={6}>\n        Join a Session\n      </Button>\n      <Modal isOpen={isOpen} onClose={onClose} isCentered>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>Join an already running session</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody>\n            <Text mb={4} fontSize='md'>\n              Enter your Name:\n            </Text>\n            <Input\n              value={userName}\n              onChange={onChange}\n              placeholder='Ada Lovelace'\n            />\n            <Text mt={4} mb={4} fontSize='md'>\n              Enter Room ID:\n            </Text>\n            <Input\n              value={roomId}\n              onChange={onRoomIdChange}\n              placeholder='xxxxxxxx-yyyy-zzzz-aaaa-bbbbbbbbbbbb'\n            />\n          </ModalBody>\n\n          <ModalFooter>\n            <Button\n              colorScheme='blue'\n              mr={3}\n              onClick={onSessionLaunch}\n              disabled={launchButtonDisabled}\n            >\n              Join\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </Flex>\n  );\n};\n\nexport default Home;\n","import { ChakraProvider, Flex } from '@chakra-ui/react';\nimport React, { useEffect, useState } from 'react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport PlayGround from './components/playground/PlayGround';\nimport Home from './components/Home/Home';\n\nfunction App() {\n  return (\n    <ChakraProvider>\n      {/* <PlayGround /> */}\n      <Router>\n        <Switch>\n          <Route exact path='/' component={Home} />\n          <Route exact path='/:roomId' component={PlayGround} />\n        </Switch>\n      </Router>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}
{"version":3,"sources":["actionTypes/index.tsx","components/CodeEditor/editorData.tsx","api/apiInfo.ts","utils/index.ts","socket/index.ts","components/Terminal/Terminal.tsx","components/CodeEditor/CodeEditor.tsx","hooks/useQuery.ts","components/Logo/Logo.tsx","components/DrawingPad/DrawingPadNative.tsx","components/playground/PlayGround.tsx","components/Home/Home.tsx","App.tsx","index.tsx"],"names":["STDOUT_TYPES","defaultJava","defaultCSharp","defaultPython","defaultKotlin","defaultClojure","defaultC","defaultCpp","defaultErlang","defaultJavascript","defaultRuby","defaultTypescript","defaultPhp","defaultGo","languageDataWithKeys","languageId","name","mode","defaultValue","themes","baseUrl","process","apiUrl","judgeUrl","delay","ms","Promise","res","setTimeout","socket","io","connect","USER_JOIN","CODE_CHANGE","LANGUAGE_CHANGE","CODE_RUN","CODE_RUN_RESULT","USER_LEFT","Terminal","items","color","minWidth","width","flex","bg","direction","height","padding","map","item","type","payload","A_MESSAGE","data","Math","random","A_CODE_RUN","userWhoRan","userName","newLangId","langId","langName","as","A_CODE_RUN_RESULT","result","whiteSpace","A_LANGUAGE_CHANGE","userWhoChanged","language","initialTerminalState","CodeEditor","useState","setMode","setLangId","id","getDefaultMode","codeValue","setCodeValue","theme","setTheme","isCompiling","setIsCompiling","setIsError","setCodeError","useRef","useReducer","state","action","newState","cloneDeep","push","stdoutOutput","dispatchStdoutOutput","useEffect","on","newValue","newMode","newCodeValue","off","submitCode","sourceCode","a","axios","request","method","url","response","console","log","token","queryResults","then","stderr","status","stdout","compileOutput","compile_output","includes","codeResultAction","emit","catch","error","onRunClick","codeRunAction","className","defaultSize","style","borderRight","maxWidth","enable","top","right","bottom","left","topRight","bottomRight","bottomLeft","topLeft","position","colorScheme","size","onClick","disabled","fontSize","cursor","ml","borderRadius","value","onChange","e","target","langData","Object","keys","backgroundColor","newTheme","_theme","editorProps","$blockScrolling","showPrintMargin","showGutter","highlightActiveLine","focus","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","useQuery","URLSearchParams","useLocation","search","Logo","history","useHistory","mr","DrawingPadNative","isDrawing","setIsDrawing","canvasRef","contextRef","canvas","current","window","innerWidth","innerHeight","context","getContext","scale","lineCap","strokeStyle","lineWidth","fillStyle","fillRect","ref","onMouseDown","nativeEvent","offsetX","offsetY","beginPath","moveTo","onMouseUp","closePath","onMouseMove","lineTo","stroke","PlayGround","props","tabOptions","icon","roomId","useParams","get","toast","useToast","title","isClosable","room","Navbar","alignItems","text","onCopy","link","_","variant","bgColor","borderBottomColor","display","flexDirection","defaultIndex","isLazy","borderTop","borderLeft","borderBottom","_selected","border","borderTopColor","LaunchButtonModal","useDisclosure","isOpen","onOpen","onClose","setUserName","launchButtonDisabled","setLaunchButtonDisabled","redirect","v4","isCentered","mb","autoFocus","length","placeholder","onKeyDown","key","JoinButtonModal","setRoomId","joinButtonDisabled","setJoinButtonDisabled","isInputValid","mt","Home","justifyContent","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b4784539.chunk.js","sourcesContent":["// dispatch consts A stands for Action Type\nexport enum STDOUT_TYPES {\n  A_LANGUAGE_CHANGE,\n  A_MESSAGE,\n  A_CODE_RUN_RESULT,\n  A_CODE_RUN,\n}\n","const defaultJava = `public class Main {\n  public static void main(String[] args) {\n      System.out.println(\"hello world\");\n  }\n}`;\n\nconst defaultCSharp = `public void HelloWorld() {\n    //Say Hello!\n    Console.WriteLine(\"Hello World\");\n}`;\n\nconst defaultPython = `def say_hello():\n    print('Hello, World')`;\n\nconst defaultKotlin = `fun main() {\n    println(\"Hello, World!\")\n}  `;\n\nconst defaultClojure = `(defn hello []\n    (prn \"Hello, World\")\n  )\n  \n(hello)`;\n\nconst defaultC = `#include <stdio.h>\n\nint main() {\n  printf(\"Hello, World\\\\n\");\n  return 0;\n}`;\n\nconst defaultCpp = `#include <iostream>\nusing namespace std;\n\nint main() {\n  cout << \"Hello World\";\n  return 0;\n}`;\n\nconst defaultErlang = `-module(solution). \n-export([start/0]). \n\nstart() -> \n   io:fwrite(\"Hello, world!\\\\n\").`;\n\nconst defaultJavascript = `console.log(\"hello world\");`;\n\nconst defaultRuby = `puts 'Hello World'`;\n\nconst defaultTypescript = `console.log(\"Hello World\")`;\n\nconst defaultPhp = `<?php\n  echo \"Hello, World\\\\n\";\n?>`;\n\nconst defaultGo = `package main\n\nimport \"fmt\"\n\nfunc main() {\n  fmt.Println(\"Hello, World!\")\n}`;\n\nexport const languageData = [\n  { languageId: 50, name: 'C', mode: 'c_cpp', defaultValue: defaultC },\n  { languageId: 54, name: 'C++', mode: 'c_cpp', defaultValue: defaultCpp },\n  {\n    languageId: 86,\n    name: 'Clojure',\n    mode: 'clojure',\n    defaultValue: defaultClojure,\n  },\n  { languageId: 51, name: 'C#', mode: 'csharp', defaultValue: defaultCSharp },\n  {\n    languageId: 58,\n    name: 'Erlang',\n    mode: 'erlang',\n    defaultValue: defaultErlang,\n  },\n  { languageId: 60, name: 'Go', mode: 'golang', defaultValue: defaultGo },\n  { languageId: 62, name: 'Java', mode: 'java', defaultValue: defaultJava },\n  {\n    languageId: 63,\n    name: 'Javascript',\n    mode: 'javascript',\n    defaultValue: defaultJavascript,\n  },\n  {\n    languageId: 78,\n    name: 'Kotlin',\n    mode: 'kotlin',\n    defaultValue: defaultKotlin,\n  },\n  { languageId: 68, name: 'PHP', mode: 'php', defaultValue: defaultPhp },\n  {\n    languageId: 71,\n    name: 'Python',\n    mode: 'python',\n    defaultValue: defaultPython,\n  },\n  { languageId: 72, name: 'Ruby', mode: 'ruby', defaultValue: defaultRuby },\n  {\n    languageId: 74,\n    name: 'Typescript',\n    mode: 'typescript',\n    defaultValue: defaultTypescript,\n  },\n];\n\ninterface Item {\n  languageId: number;\n  name: string;\n  mode: string;\n  defaultValue: string;\n}\n\nexport const languageDataWithKeys: { [key: string]: Item } = {\n  '50': { languageId: 50, name: 'C', mode: 'c_cpp', defaultValue: defaultC },\n  '54': {\n    languageId: 54,\n    name: 'C++',\n    mode: 'c_cpp',\n    defaultValue: defaultCpp,\n  },\n  '86': {\n    languageId: 86,\n    name: 'Clojure',\n    mode: 'clojure',\n    defaultValue: defaultClojure,\n  },\n  '51': {\n    languageId: 51,\n    name: 'C#',\n    mode: 'csharp',\n    defaultValue: defaultCSharp,\n  },\n  '58': {\n    languageId: 58,\n    name: 'Erlang',\n    mode: 'erlang',\n    defaultValue: defaultErlang,\n  },\n  '60': { languageId: 60, name: 'Go', mode: 'golang', defaultValue: defaultGo },\n  '62': {\n    languageId: 62,\n    name: 'Java',\n    mode: 'java',\n    defaultValue: defaultJava,\n  },\n  '63': {\n    languageId: 63,\n    name: 'Javascript',\n    mode: 'javascript',\n    defaultValue: defaultJavascript,\n  },\n  '78': {\n    languageId: 78,\n    name: 'Kotlin',\n    mode: 'kotlin',\n    defaultValue: defaultKotlin,\n  },\n  '68': { languageId: 68, name: 'PHP', mode: 'php', defaultValue: defaultPhp },\n  '71': {\n    languageId: 71,\n    name: 'Python',\n    mode: 'python',\n    defaultValue: defaultPython,\n  },\n  '72': {\n    languageId: 72,\n    name: 'Ruby',\n    mode: 'ruby',\n    defaultValue: defaultRuby,\n  },\n  '74': {\n    languageId: 74,\n    name: 'Typescript',\n    mode: 'typescript',\n    defaultValue: defaultTypescript,\n  },\n};\n\nexport const themes = [\n  'monokai',\n  'github',\n  'tomorrow_night',\n  'tomorrow',\n  'kuroir',\n  'twilight',\n  'xcode',\n  'textmate',\n  'solarized_dark',\n  'solarized_light',\n  'terminal',\n];\n","// change these - configurable\nexport const baseUrl =\n  process.env.REACT_APP_BASE_URL || 'http://localhost:8080';\n\nexport const apiUrl = `${baseUrl}/api`;\nexport const judgeUrl = `${apiUrl}/judge`;\n","export const delay = (ms: number) => new Promise(res => setTimeout(res, ms));\n","import io from 'socket.io-client';\nimport { baseUrl } from './../api/apiInfo';\n\nexport const socket = io.connect(baseUrl);\n\n// socket io event constants\nexport const USER_JOIN = 'userjoin';\nexport const CODE_CHANGE = 'codechange';\nexport const LANGUAGE_CHANGE = 'language_change';\nexport const CODE_RUN = 'code_run';\nexport const CODE_RUN_RESULT = 'code_run_result';\nexport const USER_LEFT = 'userleft';\n","import React from 'react';\nimport { Flex, Text } from '@chakra-ui/react';\nimport { STDOUT_TYPES } from '../../actionTypes';\nimport { languageDataWithKeys } from '../CodeEditor/editorData';\n\nconst Terminal = ({ items }: any) => {\n  return (\n    <Flex\n      color='white'\n      minWidth='30%'\n      width='30%'\n      flex='1'\n      bg='#272822'\n      direction='column'\n      height='100%'\n      padding={5}\n    >\n      {items.map((item: any) => {\n        const { type, payload } = item;\n        if (type === STDOUT_TYPES.A_MESSAGE) {\n          const { data } = payload;\n          return <Text key={Math.random()}>{data}</Text>;\n        } else if (type === STDOUT_TYPES.A_CODE_RUN) {\n          const { userName: userWhoRan, langId: newLangId } = payload;\n          const langName = languageDataWithKeys[newLangId]?.name;\n          return (\n            <Text key={Math.random()}>\n              User{' '}\n              <Text as='span' color='#3182CE'>\n                {userWhoRan}\n              </Text>{' '}\n              ran\n              <Text as='span' color='#38A169'>\n                {' '}\n                {langName}\n              </Text>{' '}\n              code just now.\n            </Text>\n          );\n        } else if (type === STDOUT_TYPES.A_CODE_RUN_RESULT) {\n          const { result } = payload;\n          return (\n            <Text key={Math.random()} whiteSpace='pre'>\n              {result}\n            </Text>\n          );\n        } else if (type === STDOUT_TYPES.A_LANGUAGE_CHANGE) {\n          const { userName: userWhoChanged, language } = payload;\n          return (\n            <Text key={Math.random()}>\n              User{' '}\n              <Text as='span' color='#3182CE'>\n                {userWhoChanged}\n              </Text>{' '}\n              changed language to\n              <Text as='span' color='#38A169'>\n                {' '}\n                {language}\n              </Text>\n            </Text>\n          );\n        }\n        return null;\n      })}\n    </Flex>\n  );\n};\n\nexport default Terminal;\n","import React, { useEffect, useReducer, useRef, useState } from 'react';\nimport AceEditor from 'react-ace';\nimport {\n  Box,\n  Button,\n  Flex,\n  HStack,\n  Select,\n  Spinner,\n  Text,\n} from '@chakra-ui/react';\nimport { cloneDeep } from 'lodash';\nimport axios from 'axios';\nimport { FaPlay } from 'react-icons/fa';\nimport 'ace-builds/src-min-noconflict/ext-language_tools';\nimport 'ace-builds/webpack-resolver';\nimport { themes, languageDataWithKeys } from './editorData';\nimport { judgeUrl } from '../../api/apiInfo';\nimport { delay } from '../../utils';\nimport { Resizable } from 're-resizable';\nimport { Ace } from 'ace-builds';\n\nimport 'ace-builds/src-noconflict/mode-c_cpp';\nimport 'ace-builds/src-noconflict/mode-clojure';\nimport 'ace-builds/src-noconflict/mode-csharp';\nimport 'ace-builds/src-noconflict/mode-erlang';\nimport 'ace-builds/src-noconflict/mode-golang';\nimport 'ace-builds/src-noconflict/mode-java';\nimport 'ace-builds/src-noconflict/mode-javascript';\nimport 'ace-builds/src-noconflict/mode-kotlin';\nimport 'ace-builds/src-noconflict/mode-php';\nimport 'ace-builds/src-noconflict/mode-python';\nimport 'ace-builds/src-noconflict/mode-ruby';\nimport 'ace-builds/src-noconflict/mode-typescript';\n\nimport 'ace-builds/src-noconflict/theme-monokai';\nimport 'ace-builds/src-noconflict/theme-github';\nimport 'ace-builds/src-noconflict/theme-tomorrow_night';\nimport 'ace-builds/src-noconflict/theme-tomorrow';\nimport 'ace-builds/src-noconflict/theme-kuroir';\nimport 'ace-builds/src-noconflict/theme-twilight';\nimport 'ace-builds/src-noconflict/theme-xcode';\nimport 'ace-builds/src-noconflict/theme-textmate';\nimport 'ace-builds/src-noconflict/theme-solarized_dark';\nimport 'ace-builds/src-noconflict/theme-solarized_light';\nimport 'ace-builds/src-noconflict/theme-terminal';\nimport {\n  CODE_CHANGE,\n  CODE_RUN,\n  CODE_RUN_RESULT,\n  LANGUAGE_CHANGE,\n  socket,\n} from '../../socket';\nimport { STDOUT_TYPES } from '../../actionTypes';\nimport Terminal from '../Terminal/Terminal';\n\n// Object.keys(languageDataWithKeys).forEach(key => {\n//   const languageData = languageDataWithKeys[key];\n//   const { mode } = languageData;\n//   require(`ace-builds/src-noconflict/mode-${mode}`);\n//   require(`ace-builds/src-noconflict/snippets/${mode}`);\n// });\n// themes.forEach(theme => require(`ace-builds/src-noconflict/theme-${theme}`));\n\ninterface CodeEditorProps {\n  userName: string;\n}\n\n// socket io event types, S stands for socket io\ninterface SLanguageChangeEvent {\n  id: number;\n  mode: string;\n  codeValue: string;\n  userName: string;\n}\ninterface SCodeRunEvent {\n  type: string;\n  payload: { userName: string; langId: number };\n}\n\ninterface SCodeRunResultEvent {\n  type: string;\n  payload: { result: string };\n}\n\nconst getDefaultMode = (id: string) => {\n  const data = languageDataWithKeys[id];\n  if (data && data.defaultValue) return data.defaultValue;\n};\n\nconst getDefaultLangId = () => 62;\n\nconst initialTerminalState = [\n  {\n    type: STDOUT_TYPES.A_MESSAGE,\n    payload: {\n      data: 'Environment is ready, just click run button and enjoy!',\n    },\n  },\n];\n\nconst CodeEditor = ({ userName }: CodeEditorProps) => {\n  const [mode, setMode] = useState('java');\n  const [langId, setLangId] = useState(getDefaultLangId());\n  const [codeValue, setCodeValue] = useState(getDefaultMode(langId + ''));\n  const [theme, setTheme] = useState('monokai');\n  const [isCompiling, setIsCompiling] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [codeError, setCodeError] = useState('');\n  const editorRef = useRef<any>(null);\n\n  const TerminalReducer = (state: any, action: any) => {\n    const { type, payload } = action;\n    const newState = cloneDeep(state);\n    if (type === STDOUT_TYPES.A_MESSAGE) {\n      const { data } = payload;\n      newState.push({ type: STDOUT_TYPES.A_MESSAGE, payload: { data } });\n      return newState;\n    } else if (type === STDOUT_TYPES.A_CODE_RUN) {\n      const { userName: userWhoRan } = payload;\n      newState.push({\n        type: STDOUT_TYPES.A_CODE_RUN,\n        payload: { userName: userWhoRan, langId },\n      });\n      return newState;\n    } else if (type === STDOUT_TYPES.A_CODE_RUN_RESULT) {\n      const { result } = payload;\n      newState.push({\n        type: STDOUT_TYPES.A_CODE_RUN_RESULT,\n        payload: { result },\n      });\n      return newState;\n    } else if (type === STDOUT_TYPES.A_LANGUAGE_CHANGE) {\n      const { userName: userWhoChanged, language } = payload;\n      newState.push({\n        type: STDOUT_TYPES.A_LANGUAGE_CHANGE,\n        payload: { userName: userWhoChanged, language },\n      });\n      return newState;\n    }\n    return state;\n  };\n\n  const [stdoutOutput, dispatchStdoutOutput] = useReducer(\n    TerminalReducer,\n    initialTerminalState,\n  );\n\n  useEffect(() => {\n    socket.on(CODE_CHANGE, (newValue: string) => {\n      setCodeValue(newValue);\n    });\n\n    socket.on(CODE_RUN, (data: SCodeRunEvent) => {\n      dispatchStdoutOutput(data);\n    });\n\n    socket.on(LANGUAGE_CHANGE, (data: SLanguageChangeEvent) => {\n      const {\n        id,\n        mode: newMode,\n        codeValue: newCodeValue,\n        userName: userWhoChanged,\n      } = data;\n      const language = languageDataWithKeys[id]?.name;\n      setLangId(id);\n      setMode(newMode);\n      setCodeValue(newCodeValue);\n      dispatchStdoutOutput({\n        type: STDOUT_TYPES.A_LANGUAGE_CHANGE,\n        payload: { userName: userWhoChanged, language },\n      });\n    });\n\n    socket.on(CODE_RUN_RESULT, (data: SCodeRunResultEvent) => {\n      dispatchStdoutOutput(data);\n    });\n\n    // use effect cleanup\n    return () => {\n      socket.off(CODE_CHANGE);\n      socket.off(CODE_RUN);\n      socket.off(LANGUAGE_CHANGE);\n    };\n  }, []);\n\n  // socket.on('codeselectionchange', (newRange: Ace.Range) => {\n  //   if (editorRef && editorRef.current) {\n  //     editorRef.current.editor.selection.setRange(newRange);\n  //   }\n  // });\n\n  // useEffect(() => {\n  //   editorRef?.current?.editor.gotoLine(4, 4);\n  // }, []);\n\n  const onChange = (newValue: any) => {\n    setCodeValue(newValue);\n    socket.emit(CODE_CHANGE, newValue);\n  };\n\n  const onLanguageChange = (e: React.ChangeEvent<HTMLSelectElement>): void => {\n    const id = e.target.value;\n    const langData = languageDataWithKeys[id];\n    const { mode: newMode, defaultValue: newCodeValue } = langData;\n    setLangId(+id);\n    setMode(newMode);\n    setCodeValue(newCodeValue);\n    dispatchStdoutOutput({\n      type: STDOUT_TYPES.A_LANGUAGE_CHANGE,\n      payload: { userName, language: langData.name },\n    });\n    socket.emit(LANGUAGE_CHANGE, {\n      id,\n      mode: newMode,\n      codeValue: newCodeValue,\n      userName,\n    });\n  };\n  // const onSelectionChange = (selection: any) => {\n  //   // const content = editorRef.current.editor.session.getTextRange(\n  //   //   selection.getRange(),\n  //   // );\n  //   socket.emit('codeselectionchange', selection.getRange());\n  // };\n\n  const submitCode = async (id: number, sourceCode: string | undefined) => {\n    try {\n      setIsCompiling(true);\n      const response: any = await axios.request({\n        method: 'POST',\n        url: `${judgeUrl}/submissions`,\n        data: {\n          languageId: id,\n          sourceCode: sourceCode,\n        },\n      });\n      console.log('compile: ', response);\n      return response.data.token;\n    } catch (err) {\n      console.log('Error while submitting', err);\n      setIsCompiling(false);\n      setCodeError(err);\n      setIsError(true);\n    }\n  };\n\n  const queryResults = async (token: string | undefined) => {\n    if (!token) {\n      setIsCompiling(false);\n      setIsError(true);\n      return;\n    }\n\n    await axios\n      .request({\n        method: 'GET',\n        url: `${judgeUrl}/submissions/${token}`,\n      })\n      .then(response => {\n        const { data } = response.data;\n        const { stderr, status, stdout, compile_output: compileOutput } = data;\n        console.log('results', response);\n        if (status && [1, 2, 3].includes(status.id)) {\n          console.log('we got stdout', stdout);\n          setIsCompiling(false);\n          const codeResultAction = {\n            type: STDOUT_TYPES.A_CODE_RUN_RESULT,\n            payload: { result: stdout },\n          };\n          dispatchStdoutOutput(codeResultAction);\n          socket.emit(CODE_RUN_RESULT, codeResultAction);\n        } else if (compileOutput) {\n          console.log(compileOutput);\n          setIsCompiling(false);\n          setCodeError(stderr);\n          setIsError(true);\n        } else if (stderr) {\n          console.log(stderr);\n          setIsCompiling(false);\n          setCodeError(stderr);\n          setIsError(true);\n        } else {\n          console.log('something else happened');\n          setIsCompiling(false);\n        }\n      })\n      .catch(error => {\n        console.log(error);\n        setIsCompiling(false);\n        setIsError(true);\n      });\n  };\n\n  // todo pull axios stuff into another util file and convert to async await\n  const onRunClick = async () => {\n    const codeRunAction = {\n      type: STDOUT_TYPES.A_CODE_RUN,\n      payload: { userName, langId },\n    };\n    dispatchStdoutOutput(codeRunAction);\n    socket.emit(CODE_RUN, codeRunAction);\n\n    const token = await submitCode(langId, codeValue);\n\n    await delay(5000);\n    await queryResults(token);\n  };\n\n  return (\n    <Flex height='100%' width='100%' className='container'>\n      <Resizable\n        defaultSize={{\n          width: '70%',\n          height: '100%',\n        }}\n        style={{ borderRight: '10px solid #202020' }}\n        maxWidth='70%'\n        minWidth='30%'\n        enable={{\n          top: false,\n          right: true,\n          bottom: false,\n          left: false,\n          topRight: false,\n          bottomRight: false,\n          bottomLeft: false,\n          topLeft: false,\n        }}\n      >\n        <Flex\n          direction='column'\n          position='relative'\n          height='100%'\n          width='100%'\n          bg='cornsilk'\n          className='code-editor-comp'\n        >\n          <Flex color='white' padding={2} className='code-header' bg='#202020'>\n            <Button\n              colorScheme='blue'\n              size='sm'\n              onClick={onRunClick}\n              disabled={isCompiling}\n            >\n              <HStack>\n                <Box>Run</Box>\n                {isCompiling ? (\n                  <Spinner size='sm' />\n                ) : (\n                  <Box>\n                    <FaPlay fontSize='10px' />\n                  </Box>\n                )}\n              </HStack>\n            </Button>\n            <Select\n              cursor='pointer'\n              ml={5}\n              size='sm'\n              width='7rem'\n              borderRadius='0.375rem'\n              value={langId}\n              onChange={onLanguageChange}\n            >\n              {Object.keys(languageDataWithKeys).map(id => {\n                const langData = languageDataWithKeys[id];\n                return (\n                  <option\n                    key={id}\n                    value={id}\n                    style={{ backgroundColor: '#202020' }}\n                  >\n                    {langData.name}\n                  </option>\n                );\n              })}\n            </Select>\n            <Select\n              cursor='pointer'\n              ml={5}\n              size='sm'\n              width='10rem'\n              borderRadius='0.375rem'\n              value={theme}\n              onChange={e => {\n                const newTheme = e.target.value;\n                setTheme(newTheme);\n              }}\n            >\n              {themes.map(_theme => (\n                <option\n                  key={Math.random()}\n                  value={_theme}\n                  style={{ backgroundColor: '#202020' }}\n                >\n                  {_theme}\n                </option>\n              ))}\n            </Select>\n          </Flex>\n          <AceEditor\n            mode={mode}\n            theme={theme}\n            height='100%'\n            width='100%'\n            onChange={onChange}\n            name='CODEEDITOR'\n            editorProps={{ $blockScrolling: true }}\n            fontSize={14}\n            showPrintMargin={true}\n            showGutter={true}\n            highlightActiveLine={true}\n            focus={true}\n            setOptions={{\n              enableBasicAutocompletion: true,\n              enableLiveAutocompletion: true,\n              enableSnippets: true,\n              showLineNumbers: true,\n              tabSize: 2,\n            }}\n            value={codeValue}\n          />\n        </Flex>\n      </Resizable>\n      <Terminal items={stdoutOutput} />\n    </Flex>\n  );\n};\n\nexport default CodeEditor;\n","import { useLocation } from 'react-router-dom';\n\nconst useQuery = () => {\n  return new URLSearchParams(useLocation().search);\n};\n\nexport default useQuery;\n","/* eslint-disable max-len */\nimport { Flex, Text } from '@chakra-ui/react';\nimport React from 'react';\nimport { useHistory } from 'react-router';\n\nconst Logo = () => {\n  const history = useHistory();\n\n  const items = [\n    { value: 'Code', color: '#38A169', fontSize: '2xl' },\n    { value: 'Collab', color: '#3182CE', fontSize: '2xl' },\n  ];\n  return (\n    <Flex\n      cursor='pointer'\n      mr={3}\n      onClick={(e: any) => {\n        history.push('/');\n      }}\n    >\n      {items.map(item => {\n        const { value, color, fontSize } = item;\n        return (\n          <Text key={Math.random()} as='span' color={color} fontSize={fontSize}>\n            {value}\n          </Text>\n        );\n      })}\n    </Flex>\n  );\n};\n\nexport default Logo;\n","import React, { MutableRefObject, useEffect, useRef, useState } from 'react';\nimport { Button } from '@chakra-ui/button';\nimport { Flex } from '@chakra-ui/layout';\nimport { useCanvas } from './CanvasContext';\n\nconst DrawingPadNative = () => {\n  const [isDrawing, setIsDrawing] = useState(false);\n  const canvasRef = useRef() as MutableRefObject<HTMLCanvasElement>;\n  const contextRef = useRef() as MutableRefObject<CanvasRenderingContext2D>;\n  const backgroundColor = '#272822';\n  const strokeColor = '#3182CE';\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    canvas.width = window.innerWidth * 2;\n    canvas.height = window.innerHeight * 2;\n    canvas.style.width = `${window.innerWidth}px`;\n    canvas.style.height = `${window.innerHeight}px`;\n\n    const context = canvas.getContext('2d');\n    if (!context) return;\n    context.scale(2, 2);\n    context.lineCap = 'round';\n    context.strokeStyle = strokeColor;\n    context.lineWidth = 5;\n    contextRef.current = context;\n  }, []);\n\n  const startDrawing = ({ nativeEvent }: any) => {\n    const { offsetX, offsetY } = nativeEvent;\n    contextRef.current.beginPath();\n    contextRef.current.moveTo(offsetX, offsetY);\n    setIsDrawing(true);\n  };\n\n  const finishDrawing = () => {\n    contextRef.current.closePath();\n    setIsDrawing(false);\n  };\n\n  const draw = ({ nativeEvent }: any) => {\n    if (!isDrawing) {\n      return;\n    }\n    const { offsetX, offsetY } = nativeEvent;\n    contextRef.current.lineTo(offsetX, offsetY);\n    contextRef.current.stroke();\n  };\n\n  const clearCanvas = () => {\n    const canvas = canvasRef.current;\n    contextRef.current.fillStyle = backgroundColor;\n    contextRef.current.fillRect(0, 0, canvas.width, canvas.height);\n  };\n\n  return (\n    <Flex height='100%' width='100%' direction='column'>\n      <Flex bg='#202020' width='100%' padding={2}>\n        <Button size='sm' colorScheme='green' onClick={clearCanvas}>\n          Clear\n        </Button>\n        <Button ml={5} size='sm' colorScheme='green'>\n          Undo\n        </Button>\n        <Button ml={5} size='sm' colorScheme='green'>\n          Save\n        </Button>\n        <Button ml={5} size='sm' colorScheme='green'>\n          Load\n        </Button>\n      </Flex>\n      <canvas\n        ref={canvasRef}\n        onMouseDown={startDrawing}\n        onMouseUp={finishDrawing}\n        onMouseMove={draw}\n      />\n    </Flex>\n  );\n};\n\nexport default DrawingPadNative;\n","import React, { useEffect } from 'react';\nimport {\n  Box,\n  Button,\n  Flex,\n  HStack,\n  Tab,\n  TabList,\n  TabPanel,\n  TabPanels,\n  Tabs,\n  useToast,\n} from '@chakra-ui/react';\nimport CodeEditor from '../CodeEditor/CodeEditor';\nimport DrawingPad from '../DrawingPad/DrawingPad';\nimport DrawingPadExcaliDraw from '../DrawingPadExcaliDraw/DrawingPadExcaliDraw';\nimport { socket, USER_JOIN, USER_LEFT } from '../../socket/index';\nimport { RiCodeSSlashLine, RiPencilFill } from 'react-icons/ri';\nimport './PlayGround.scss';\nimport { useParams } from 'react-router';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { baseUrl } from '../../api/apiInfo';\nimport useQuery from '../../hooks/useQuery';\nimport Logo from '../Logo/Logo';\nimport DrawingPadNative from '../DrawingPad/DrawingPadNative';\n\ninterface Params {\n  roomId: string;\n}\n\nconst PlayGround = (props: any) => {\n  const tabOptions = [\n    { value: 'Code', icon: <RiCodeSSlashLine /> },\n    { value: 'Draw', icon: <RiPencilFill /> },\n  ];\n  const { roomId }: Params = useParams();\n  const query: any = useQuery();\n  const name = query.get('user');\n  const toast = useToast();\n\n  useEffect(() => {\n    socket.on(USER_JOIN, (userName: string) => {\n      console.log(userName, 'joined');\n      toast({\n        title: `${userName} joined`,\n        status: 'success',\n        isClosable: true,\n      });\n    });\n\n    socket.on(USER_LEFT, (userName: string) => {\n      console.log(userName, 'left');\n      toast({\n        title: `${userName} left`,\n        status: 'error',\n        isClosable: true,\n      });\n    });\n\n    const data = {\n      room: roomId,\n      name,\n    };\n    socket.emit(USER_JOIN, data);\n\n    return () => {\n      socket.off(USER_JOIN);\n      socket.off(USER_LEFT);\n    };\n  }, []);\n\n  const Navbar = () => {\n    return (\n      <Flex\n        className='navbar'\n        color='white'\n        backgroundColor='#202020'\n        alignItems='center'\n        padding={2}\n      >\n        <Logo />\n        <CopyToClipboard\n          // text={`${window.location.origin}/#/${roomId}`}\n          text={roomId}\n          onCopy={(link, _) => {\n            console.log('copied', link);\n            toast({\n              // title: `Copied link, you can share it with your friend now. ${link}`,\n              title: `Copied roomId: ${roomId}`,\n              status: 'success',\n              isClosable: true,\n              position: 'top',\n            });\n          }}\n        >\n          <Button colorScheme='green' size='sm'>\n            Copy RoomId\n          </Button>\n        </CopyToClipboard>\n      </Flex>\n    );\n  };\n\n  return (\n    <Flex\n      className='playground'\n      direction='column'\n      height='100vh'\n      width='100vw'\n    >\n      <Navbar />\n      <Flex className='playground-inner' flex='1'>\n        <Tabs\n          variant='enclosed-colored'\n          bgColor='#272822'\n          borderBottomColor='#202020'\n          width='100%'\n          display='flex'\n          flexDirection='column'\n          defaultIndex={1}\n          isLazy\n        >\n          <TabList>\n            {tabOptions.map(item => (\n              <Tab\n                key={Math.random()}\n                className='tab_mine'\n                bg='#272822'\n                color='grey'\n                borderTop='none'\n                borderLeft='none'\n                borderRight='none'\n                borderBottom='none'\n                _selected={{\n                  color: 'white',\n                  bg: '#202020',\n                  border: 'none',\n                  borderTop: '3px solid green',\n                  borderTopColor: 'blue.500',\n                }}\n              >\n                <HStack>\n                  <Box>{item.icon}</Box>\n                  <Box>{item.value}</Box>\n                </HStack>\n              </Tab>\n            ))}\n          </TabList>\n          <TabPanels flex='1 1 auto'>\n            <TabPanel padding={0} height='100%'>\n              <CodeEditor userName={name} />\n            </TabPanel>\n            <TabPanel padding={0} height='100%'>\n              {/* <DrawingPad /> */}\n              <DrawingPadNative />\n              {/* <DrawingPadExcaliDraw /> */}\n            </TabPanel>\n          </TabPanels>\n        </Tabs>\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default PlayGround;\n","import {\n  Button,\n  Flex,\n  Input,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  Spacer,\n  Text,\n  useDisclosure,\n} from '@chakra-ui/react';\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { v4, validate } from 'uuid';\n\nconst LaunchButtonModal = () => {\n  const history = useHistory();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [userName, setUserName] = useState('');\n  const [launchButtonDisabled, setLaunchButtonDisabled] = useState(true);\n\n  const onChange = (e: any) => {\n    const name = e.target.value;\n    setUserName(name);\n    setLaunchButtonDisabled(!(name && name.length > 0));\n  };\n\n  const redirect = () => {\n    const id = v4();\n    history.push(`${id}?user=${userName}`);\n  };\n\n  const onSessionLaunch = (e: any) => {\n    redirect();\n  };\n\n  return (\n    <>\n      <Button colorScheme='blue' onClick={onOpen}>\n        Launch Session\n      </Button>\n      <Modal isOpen={isOpen} onClose={onClose} isCentered>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>Launch a Collaborative Session</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody>\n            <Text mb={4} fontSize='md'>\n              Enter your Name:\n            </Text>\n            <Input\n              autoFocus={true}\n              value={userName}\n              onChange={onChange}\n              placeholder='Ada Lovelace'\n              onKeyDown={e => {\n                if (e.key === 'Enter' && !launchButtonDisabled) {\n                  redirect();\n                }\n              }}\n            />\n          </ModalBody>\n\n          <ModalFooter>\n            <Button\n              colorScheme='blue'\n              mr={3}\n              onClick={onSessionLaunch}\n              disabled={launchButtonDisabled}\n            >\n              Launch\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nconst JoinButtonModal = () => {\n  const history = useHistory();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [userName, setUserName] = useState('');\n  const [roomId, setRoomId] = useState('');\n  const [joinButtonDisabled, setJoinButtonDisabled] = useState(true);\n\n  const isInputValid = (name: string, id: string) => {\n    // return name?.length > 0 && id?.length > 0 && validate(id);\n    return name?.length > 0 && id?.length > 0;\n  };\n\n  const onChange = (e: any) => {\n    const name = e.target.value;\n    setUserName(name);\n    setJoinButtonDisabled(!isInputValid(name, roomId));\n  };\n\n  const onRoomIdChange = (e: any) => {\n    const id = e.target.value;\n    setRoomId(id);\n    setJoinButtonDisabled(!isInputValid(userName, id));\n  };\n\n  const redirect = () => {\n    history.push(`${roomId}?user=${userName}`);\n  };\n\n  const onJoinLaunch = (e: any) => {\n    redirect();\n  };\n\n  const onKeyDown = (e: any) => {\n    if (e.key === 'Enter' && !joinButtonDisabled) {\n      redirect();\n    }\n  };\n\n  return (\n    <>\n      <Button colorScheme='green' onClick={onOpen} mt={6}>\n        Join a Session\n      </Button>\n      <Modal isOpen={isOpen} onClose={onClose} isCentered>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>Join an already running session</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody>\n            <Text mb={4} fontSize='md'>\n              Enter your Name:\n            </Text>\n            <Input\n              value={userName}\n              onChange={onChange}\n              placeholder='Ada Lovelace'\n              autoFocus={true}\n              onKeyDown={onKeyDown}\n            />\n            <Text mt={4} mb={4} fontSize='md'>\n              Enter Room ID:\n            </Text>\n            <Input\n              value={roomId}\n              onChange={onRoomIdChange}\n              placeholder='xxxxxxxx-yyyy-zzzz-aaaa-bbbbbbbbbbbb'\n              onKeyDown={onKeyDown}\n            />\n          </ModalBody>\n\n          <ModalFooter>\n            <Button\n              colorScheme='blue'\n              mr={3}\n              onClick={onJoinLaunch}\n              disabled={joinButtonDisabled}\n            >\n              Join\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nconst Home = (props: any) => {\n  return (\n    <Flex\n      height='100vh'\n      width='100vw'\n      alignItems='center'\n      justifyContent='center'\n      bg='#272822'\n      direction='column'\n    >\n      <LaunchButtonModal />\n      <JoinButtonModal />\n    </Flex>\n  );\n};\n\nexport default Home;\n","import { ChakraProvider, Flex } from '@chakra-ui/react';\nimport React, { useEffect, useState } from 'react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport PlayGround from './components/playground/PlayGround';\nimport Home from './components/Home/Home';\nimport useQuery from './hooks/useQuery';\n\nfunction App() {\n  return (\n    <ChakraProvider>\n      {/* <PlayGround /> */}\n      <Router>\n        <Switch>\n          <Route exact path='/' component={Home} />\n          <Route exact path='/:roomId' component={PlayGround} />\n        </Switch>\n      </Router>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}
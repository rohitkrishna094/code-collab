{"version":3,"sources":["actionTypes/index.tsx","components/CodeEditor/editorData.tsx","api/apiInfo.ts","utils/index.ts","socket/index.ts","components/Terminal/Terminal.tsx","store/reducers/ChatReducer.ts","utils/stringUtils.ts","components/Chat/Chat.tsx","utils/emojiUtils.ts","store/reducers/TerminalReducer.ts","components/CodeEditor/CodeEditor.tsx","hooks/useQuery.ts","components/Logo/Logo.tsx","components/DrawingPad/DrawingPadNative.tsx","components/playground/PlayGround.tsx","components/Home/Home.tsx","App.tsx","store/reducers/UserReducer.ts","store/reducers/rootReducer.ts","store/index.ts","index.tsx"],"names":["STDOUT_TYPES","CHAT_TYPES","USER_TYPES","defaultJava","defaultCSharp","defaultPython","defaultKotlin","defaultClojure","defaultC","defaultCpp","defaultJavascript","defaultRuby","defaultTypescript","defaultPhp","defaultGo","languageDataWithKeys","languageId","name","mode","defaultValue","extension","themes","baseUrl","process","apiUrl","judgeUrl","delay","ms","Promise","res","setTimeout","socket","io","connect","USER_JOIN","CODE_CHANGE","LANGUAGE_CHANGE","CODE_RUN","CODE_RUN_RESULT","USER_LEFT","CHAT_MESSAGE_SENT","Terminal","items","className","color","minWidth","maxWidth","width","bg","direction","height","padding","overflowY","map","item","type","payload","A_MESSAGE","data","Math","random","A_CODE_RUN","userWhoRan","userName","newLangId","langId","langName","as","A_CODE_RUN_RESULT","result","whiteSpace","A_LANGUAGE_CHANGE","userWhoChanged","language","ChatReducer","state","action","newState","cloneDeep","A_SENT_MESSAGE","push","isBlank","s","test","isNotBlank","ChatItem","props","content","isMyMessage","mb","display","size","ml","flex","borderRadius","paddingLeft","paddingRight","fontSize","wordBreak","AutoResizeTextarea","React","forwardRef","ref","minH","overflow","w","resize","minRows","ResizeTextarea","maxHeight","displayName","ChatToggle","isChatOpen","onChatToggle","style","position","top","right","zIndex","cursor","backgroundColor","alignItems","justifyContent","border","borderBottomLeftRadius","borderTopLeftRadius","onClick","transform","Chat","shouldDisplay","useState","value","setValue","emojiImage","setEmojiImage","emojiSize","setEmojiSize","useReducer","chatContent","dispatchChatContent","userState","useSelector","user","isEmojiPickerOpen","setIsEmojiPickerOpen","useEffect","on","off","borderLeft","borderTop","boxSizing","borderBottom","slice","reverse","msg","mr","onKeyDown","e","shiftKey","key","chatMessageSentAction","emit","placeholder","onChange","target","bottom","set","native","title","emoji","onSelect","showPreview","showSkinTones","emojiTooltip","theme","onOver","emojis","floor","length","randomEmojiFromMart","onLeave","initialTerminalState","TerminalReducer","CodeEditor","setMode","setLangId","id","getDefaultMode","codeValue","setCodeValue","setTheme","isCompiling","setIsCompiling","setIsError","setCodeError","setIsChatOpen","useRef","stdoutOutput","dispatchStdoutOutput","newValue","newMode","newCodeValue","onLanguageChange","langData","submitCode","sourceCode","a","axios","request","method","url","response","console","log","token","queryResults","then","stderr","status","stdout","compileOutput","compile_output","includes","codeResultAction","catch","error","onRunClick","codeRunAction","onDownloadClick","aTag","document","createElement","file","Blob","href","URL","createObjectURL","download","Date","now","click","onUploadClick","CodeEditorHeader","colorScheme","disabled","Object","keys","newTheme","_theme","hasArrow","label","marginTop","defaultSize","borderRight","enable","left","topRight","bottomRight","bottomLeft","topLeft","editorProps","$blockScrolling","showPrintMargin","showGutter","highlightActiveLine","focus","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","useQuery","URLSearchParams","useLocation","search","Logo","history","useHistory","fs","DrawingPadNative","isDrawing","setIsDrawing","canvasRef","contextRef","canvas","current","window","innerWidth","innerHeight","context","getContext","scale","lineCap","strokeStyle","lineWidth","fillStyle","fillRect","onMouseDown","nativeEvent","offsetX","offsetY","beginPath","moveTo","onMouseUp","closePath","onMouseMove","lineTo","stroke","PlayGround","tabOptions","icon","roomId","useParams","get","toast","useToast","dispatch","useDispatch","isClosable","room","A_USERNAME_CHANGE","Navbar","text","onCopy","link","_","variant","bgColor","borderBottomColor","flexDirection","defaultIndex","isLazy","_selected","borderTopColor","CreateButtonModal","useDisclosure","isOpen","onOpen","onClose","setUserName","createButtonDisabled","setCreateButtonDisabled","redirect","v4","isCentered","autoFocus","JoinButtonModal","setRoomId","joinButtonDisabled","setJoinButtonDisabled","isInputValid","mt","Home","h","textAlign","hideWhenDone","hideWhenDoneDelay","avgTypingDelay","Delay","Backspace","count","App","exact","path","component","initialState","UserReducer","rootReducer","combineReducers","middleware","thunk","composeEnhancers","composeWithDevTools","trace","traceLimit","store","createStore","applyMiddleware","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0f30e835.chunk.js","sourcesContent":["// dispatch consts A stands for Action Type\nexport enum STDOUT_TYPES {\n  A_LANGUAGE_CHANGE,\n  A_MESSAGE,\n  A_CODE_RUN_RESULT,\n  A_CODE_RUN,\n}\n\nexport enum CHAT_TYPES {\n  A_SENT_MESSAGE,\n}\n\nexport enum USER_TYPES {\n  A_USERNAME_CHANGE,\n}\n","const defaultJava = `public class Main {\n  public static void main(String[] args) {\n      System.out.println(\"hello world\");\n  }\n}`;\n\nconst defaultCSharp = `using System;\n\nclass Program {\n    static void Main(string[] args) {\n        Console.WriteLine(\"Hello, world!\");\n    }\n}`;\n\nconst defaultPython = `print('Hello, World')`;\n\nconst defaultKotlin = `fun main() {\n    println(\"Hello, World!\")\n}  `;\n\nconst defaultClojure = `(defn hello []\n    (prn \"Hello, World\")\n  )\n  \n(hello)`;\n\nconst defaultC = `#include <stdio.h>\n\nint main() {\n  printf(\"Hello, World\\\\n\");\n  return 0;\n}`;\n\nconst defaultCpp = `#include <iostream>\nusing namespace std;\n\nint main() {\n  cout << \"Hello World\";\n  return 0;\n}`;\n\nconst defaultJavascript = `console.log(\"hello world\");`;\n\nconst defaultRuby = `puts 'Hello World'`;\n\nconst defaultTypescript = `console.log(\"Hello World\")`;\n\nconst defaultPhp = `<?php\n  echo \"Hello, World\\\\n\";\n?>`;\n\nconst defaultGo = `package main\n\nimport \"fmt\"\n\nfunc main() {\n  fmt.Println(\"Hello, World!\")\n}`;\n\nexport const languageData = [\n  { languageId: 50, name: 'C', mode: 'c_cpp', defaultValue: defaultC },\n  { languageId: 54, name: 'C++', mode: 'c_cpp', defaultValue: defaultCpp },\n  {\n    languageId: 86,\n    name: 'Clojure',\n    mode: 'clojure',\n    defaultValue: defaultClojure,\n  },\n  { languageId: 51, name: 'C#', mode: 'csharp', defaultValue: defaultCSharp },\n  { languageId: 60, name: 'Go', mode: 'golang', defaultValue: defaultGo },\n  { languageId: 62, name: 'Java', mode: 'java', defaultValue: defaultJava },\n  {\n    languageId: 63,\n    name: 'Javascript',\n    mode: 'javascript',\n    defaultValue: defaultJavascript,\n  },\n  {\n    languageId: 78,\n    name: 'Kotlin',\n    mode: 'kotlin',\n    defaultValue: defaultKotlin,\n  },\n  { languageId: 68, name: 'PHP', mode: 'php', defaultValue: defaultPhp },\n  {\n    languageId: 71,\n    name: 'Python',\n    mode: 'python',\n    defaultValue: defaultPython,\n  },\n  { languageId: 72, name: 'Ruby', mode: 'ruby', defaultValue: defaultRuby },\n  {\n    languageId: 74,\n    name: 'Typescript',\n    mode: 'typescript',\n    defaultValue: defaultTypescript,\n  },\n];\n\ninterface Item {\n  languageId: number;\n  name: string;\n  mode: string;\n  defaultValue: string;\n  extension: string;\n}\n\nexport const getExtensionByLangId = (id: string) => {\n  const langData = languageDataWithKeys[id];\n  return langData.extension;\n};\n\nexport const languageDataWithKeys: { [key: string]: Item } = {\n  '50': {\n    languageId: 50,\n    name: 'C',\n    mode: 'c_cpp',\n    defaultValue: defaultC,\n    extension: 'c',\n  },\n  '54': {\n    languageId: 54,\n    name: 'C++',\n    mode: 'c_cpp',\n    defaultValue: defaultCpp,\n    extension: 'cpp',\n  },\n  '86': {\n    languageId: 86,\n    name: 'Clojure',\n    mode: 'clojure',\n    defaultValue: defaultClojure,\n    extension: 'clj',\n  },\n  '51': {\n    languageId: 51,\n    name: 'C#',\n    mode: 'csharp',\n    defaultValue: defaultCSharp,\n    extension: 'cs',\n  },\n  '60': {\n    languageId: 60,\n    name: 'Go',\n    mode: 'golang',\n    defaultValue: defaultGo,\n    extension: 'go',\n  },\n  '62': {\n    languageId: 62,\n    name: 'Java',\n    mode: 'java',\n    defaultValue: defaultJava,\n    extension: 'java',\n  },\n  '63': {\n    languageId: 63,\n    name: 'Javascript',\n    mode: 'javascript',\n    defaultValue: defaultJavascript,\n    extension: 'js',\n  },\n  '78': {\n    languageId: 78,\n    name: 'Kotlin',\n    mode: 'kotlin',\n    defaultValue: defaultKotlin,\n    extension: 'kt',\n  },\n  '68': {\n    languageId: 68,\n    name: 'PHP',\n    mode: 'php',\n    defaultValue: defaultPhp,\n    extension: 'php',\n  },\n  '71': {\n    languageId: 71,\n    name: 'Python',\n    mode: 'python',\n    defaultValue: defaultPython,\n    extension: 'py',\n  },\n  '72': {\n    languageId: 72,\n    name: 'Ruby',\n    mode: 'ruby',\n    defaultValue: defaultRuby,\n    extension: 'rb',\n  },\n  '74': {\n    languageId: 74,\n    name: 'Typescript',\n    mode: 'typescript',\n    defaultValue: defaultTypescript,\n    extension: 'ts',\n  },\n};\n\nexport const themes = [\n  'monokai',\n  'github',\n  'tomorrow_night',\n  'tomorrow',\n  'kuroir',\n  'twilight',\n  'xcode',\n  'textmate',\n  'solarized_dark',\n  'solarized_light',\n  'terminal',\n];\n","// change these - configurable\nexport const baseUrl =\n  process.env.REACT_APP_BASE_URL || 'http://localhost:8080';\n\nexport const apiUrl = `${baseUrl}/api`;\nexport const judgeUrl = `${apiUrl}/judge`;\n","export const delay = (ms: number) => new Promise(res => setTimeout(res, ms));\n","import io from 'socket.io-client';\nimport { baseUrl } from './../api/apiInfo';\n\nexport const socket = io.connect(baseUrl);\n\n// socket io event constants\nexport const USER_JOIN = 'userjoin';\nexport const CODE_CHANGE = 'codechange';\nexport const LANGUAGE_CHANGE = 'language_change';\nexport const CODE_RUN = 'code_run';\nexport const CODE_RUN_RESULT = 'code_run_result';\nexport const USER_LEFT = 'userleft';\nexport const CHAT_MESSAGE_SENT = 'chat_message_sent';\n\n// socket io event types, S stands for socket io\nexport interface SLanguageChangeEvent {\n  id: number;\n  mode: string;\n  codeValue: string;\n  userName: string;\n}\nexport interface SCodeRunEvent {\n  type: string;\n  payload: { userName: string; langId: number };\n}\n\nexport interface SCodeRunResultEvent {\n  type: string;\n  payload: { result: string };\n}\n\nexport interface SChatMessageSentEventInput {\n  type: string;\n  payload: { userName: string; msg: string };\n}\n","import React from 'react';\nimport { Flex, Text } from '@chakra-ui/react';\nimport { STDOUT_TYPES } from '../../actionTypes';\nimport { languageDataWithKeys } from '../CodeEditor/editorData';\nimport './Terminal.scss';\n\nconst Terminal = ({ items }: any) => {\n  return (\n    <Flex\n      className='terminal'\n      color='white'\n      minWidth='30%'\n      maxWidth='30%'\n      width='30%'\n      bg='#272822'\n      direction='column'\n      height='100%'\n      padding={5}\n      overflowY='auto'\n    >\n      {items.map((item: any) => {\n        const { type, payload } = item;\n        if (type === STDOUT_TYPES.A_MESSAGE) {\n          const { data } = payload;\n          return <Text key={Math.random()}>{data}</Text>;\n        } else if (type === STDOUT_TYPES.A_CODE_RUN) {\n          const { userName: userWhoRan, langId: newLangId } = payload;\n          const langName = languageDataWithKeys[newLangId]?.name;\n          return (\n            <Text key={Math.random()}>\n              User{' '}\n              <Text as='span' color='#3182CE'>\n                {userWhoRan}\n              </Text>{' '}\n              ran\n              <Text as='span' color='#38A169'>\n                {' '}\n                {langName}\n              </Text>{' '}\n              code just now.\n            </Text>\n          );\n        } else if (type === STDOUT_TYPES.A_CODE_RUN_RESULT) {\n          const { result } = payload;\n          return (\n            <Text key={Math.random()} whiteSpace='pre'>\n              {result}\n            </Text>\n          );\n        } else if (type === STDOUT_TYPES.A_LANGUAGE_CHANGE) {\n          const { userName: userWhoChanged, language } = payload;\n          return (\n            <Text key={Math.random()}>\n              User{' '}\n              <Text as='span' color='#3182CE'>\n                {userWhoChanged}\n              </Text>{' '}\n              changed language to\n              <Text as='span' color='#38A169'>\n                {' '}\n                {language}\n              </Text>\n            </Text>\n          );\n        }\n        return null;\n      })}\n    </Flex>\n  );\n};\n\nexport default Terminal;\n","import { cloneDeep } from 'lodash';\nimport { CHAT_TYPES, STDOUT_TYPES } from '../../actionTypes';\n\nconst ChatReducer = (state: any, action: any) => {\n  const { type, payload } = action;\n  const newState = cloneDeep(state);\n  if (type === CHAT_TYPES.A_SENT_MESSAGE) {\n    newState.push({ type: CHAT_TYPES.A_SENT_MESSAGE, payload });\n    return newState;\n  }\n  return state;\n};\n\nexport default ChatReducer;\n","export const isEmpty = (s: string) => !s || s.length === 0;\n\nexport const isNotEmpty = (s: string) => !isEmpty(s);\n\nexport const isBlank = (s: string) => !s || /^\\s*$/.test(s);\n\nexport const isNotBlank = (s: string) => !isBlank(s);\n","import { Flex, Text } from '@chakra-ui/layout';\nimport React, { useEffect, useReducer, useState } from 'react';\nimport { TiArrowSortedDown } from 'react-icons/ti';\nimport { IoMdChatbubbles, IoMdSend } from 'react-icons/io';\nimport { GrEmoji } from 'react-icons/gr';\nimport { Avatar } from '@chakra-ui/avatar';\nimport { InputGroup, InputRightElement } from '@chakra-ui/input';\nimport ResizeTextarea from 'react-textarea-autosize';\nimport { Textarea } from '@chakra-ui/textarea';\nimport ChatReducer from '../../store/reducers/ChatReducer';\nimport { CHAT_TYPES } from '../../actionTypes';\nimport { isBlank, isNotBlank } from '../../utils/stringUtils';\nimport {\n  CHAT_MESSAGE_SENT,\n  SChatMessageSentEventInput,\n  socket,\n} from '../../socket';\nimport { useSelector } from 'react-redux';\nimport './Chat.scss';\nimport 'emoji-mart/css/emoji-mart.css';\nimport { Emoji, Picker } from 'emoji-mart';\nimport { randomEmojiFromMart } from '../../utils/emojiUtils';\n\nconst dummyImg =\n  'https://images.unsplash.com/photo-1554151228-14d9def656e4?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=633&q=80';\n\nconst ChatItem = (props: any) => {\n  const { content, userName, isMyMessage } = props;\n\n  return (\n    <Flex className='chat-item-wrapper' width='100%' mb={2}>\n      <Flex className='avatar' display={isMyMessage ? 'none' : 'flex'}>\n        <Avatar size='sm' name={userName} />\n      </Flex>\n      <Flex\n        className='content'\n        ml={4}\n        flex='1'\n        bg={isMyMessage ? '#202020' : '#3C3C3C'}\n        padding={1}\n        borderRadius='4px'\n        direction='column'\n        paddingLeft={5}\n        paddingRight={5}\n      >\n        <Text fontSize='sm' color='#BDC3C7'>\n          {isMyMessage ? 'You' : userName}\n        </Text>\n        <Text wordBreak='break-all'>{content}</Text>\n      </Flex>\n    </Flex>\n  );\n};\n\nconst AutoResizeTextarea = React.forwardRef((props: any, ref: any) => {\n  return (\n    <Textarea\n      minH='unset'\n      overflow='hidden'\n      w='100%'\n      resize='none'\n      ref={ref}\n      minRows={1}\n      as={ResizeTextarea}\n      maxHeight='100px'\n      {...props}\n    />\n  );\n});\n\nAutoResizeTextarea.displayName = 'AutoResizeTextarea';\n\nconst defaultEmojiSize = 24;\n\nconst Chat = (props: any) => {\n  const { shouldDisplay } = props;\n  const [value, setValue] = useState('');\n  const [emojiImage, setEmojiImage] = useState('grinning');\n  const [emojiSize, setEmojiSize] = useState(defaultEmojiSize);\n  const [chatContent, dispatchChatContent] = useReducer(ChatReducer, []);\n  const userState = useSelector((state: any) => state.user);\n  const [isEmojiPickerOpen, setIsEmojiPickerOpen] = useState(false);\n  const { userName } = userState;\n\n  useEffect(() => {\n    socket.on(CHAT_MESSAGE_SENT, (data: SChatMessageSentEventInput) => {\n      dispatchChatContent(data);\n    });\n\n    return () => {\n      socket.off(CHAT_MESSAGE_SENT);\n    };\n  }, []);\n\n  const handleInputChange = (e: any) => {\n    const value = e.target.value;\n    // todo fix this bug where users type newline but its not persisted in chat section\n    if (value === '\\n') return;\n    setValue(value);\n  };\n\n  const onKeyDown = (e: any) => {\n    if (isBlank(userName)) return;\n    if (e.shiftKey) return;\n\n    if (e.key === 'Enter' && isNotBlank(value)) {\n      const chatMessageSentAction: any = {\n        type: CHAT_TYPES.A_SENT_MESSAGE,\n        payload: { userName, msg: value },\n      };\n      socket.emit(CHAT_MESSAGE_SENT, chatMessageSentAction);\n      chatMessageSentAction.payload.isMyMessage = true;\n      dispatchChatContent(chatMessageSentAction);\n      setValue('');\n    }\n  };\n\n  const onEmojiMouseDown = (e: any) => {\n    setIsEmojiPickerOpen(!isEmojiPickerOpen);\n  };\n\n  const onEmojiSelected = (e: any) => {\n    setValue(value + e.native);\n  };\n\n  const onEmojiOver = (e: any) => {\n    setEmojiSize(32);\n    setEmojiImage(randomEmojiFromMart());\n  };\n\n  const onEmojiLeave = (e: any) => {\n    setEmojiSize(defaultEmojiSize);\n  };\n\n  const onEmojiClicked = (e: any) => {\n    // console.log(e);\n  };\n\n  return (\n    <Flex\n      className='chat-wrapper'\n      color='white'\n      direction='column'\n      bg='#272822'\n      // bg='red'\n      borderLeft='2px solid #202020'\n      borderTop='2px solid #202020'\n      minWidth='25%'\n      maxWidth='25%'\n      width='25%'\n      height='100%'\n      // overflowY='auto'\n      display={shouldDisplay ? 'flex' : 'none'}\n      position='absolute'\n      right='0'\n      zIndex='1'\n      boxSizing='border-box'\n      alignItems='center'\n    >\n      <Flex\n        justifyContent='center'\n        alignItems='center'\n        padding={3}\n        fontSize='24px'\n      >\n        <IoMdChatbubbles />\n      </Flex>\n      <Flex\n        className='chat-content'\n        padding={3}\n        direction='column-reverse'\n        overflowY='auto'\n        borderBottom='4px solid #272822'\n        height='100%'\n        width='100%'\n        mb={3}\n      >\n        {/* reverse chatContent and then use map */}\n        {chatContent\n          .slice(0)\n          .reverse()\n          .map((item: any) => {\n            const { type, payload } = item;\n            const { userName, msg, isMyMessage } = payload;\n\n            return (\n              <ChatItem\n                key={Math.random()}\n                content={msg}\n                userName={userName}\n                isMyMessage={isMyMessage}\n              />\n            );\n          })}\n      </Flex>\n      <InputGroup\n        className='chat-type-group'\n        ml={3}\n        mr={3}\n        mb={3}\n        width='90%'\n        boxSizing='border-box'\n        onKeyDown={onKeyDown}\n      >\n        <AutoResizeTextarea\n          placeholder='Message this channel'\n          value={value}\n          onChange={handleInputChange}\n        />\n        <Picker\n          style={{\n            display: isEmojiPickerOpen ? 'block' : 'none',\n            position: 'absolute',\n            bottom: '50px',\n            right: '0px',\n          }}\n          color='#38A169'\n          set='google'\n          native={true}\n          title='emoji picker'\n          emoji='point_up'\n          onSelect={onEmojiSelected}\n          onClick={onEmojiClicked}\n          showPreview={false}\n          showSkinTones={false}\n          emojiTooltip={true}\n          theme='dark'\n        />\n        <InputRightElement className='add-icon-wrapper'>\n          <Flex className='emoji-container'>\n            <Emoji\n              emoji={emojiImage}\n              set='google'\n              size={emojiSize}\n              onClick={onEmojiMouseDown}\n              onOver={onEmojiOver}\n              onLeave={onEmojiLeave}\n            />\n          </Flex>\n        </InputRightElement>\n      </InputGroup>\n    </Flex>\n  );\n};\n\nexport const ChatToggle = (props: any) => {\n  const { isChatOpen, onChatToggle, style } = props;\n  return (\n    <Flex\n      className='chat-toggle'\n      color='white'\n      position='absolute'\n      top='50%'\n      right={isChatOpen ? '25%' : '0'}\n      zIndex='1'\n      cursor='pointer'\n      backgroundColor='#202020'\n      height='80px'\n      alignItems='center'\n      justifyContent='center'\n      border='1px solid black'\n      borderBottomLeftRadius='8px'\n      borderTopLeftRadius='8px'\n      onClick={onChatToggle}\n      style={style}\n    >\n      <TiArrowSortedDown\n        style={{\n          transform: isChatOpen ? 'rotate(-90deg)' : 'rotate(90deg)',\n        }}\n      />\n    </Flex>\n  );\n};\n\nexport default Chat;\n","export const randomEmojiFromMart = () => {\n  const emojis = [\n    'smiley',\n    'rolling_on_the_floor_laughing',\n    'joy',\n    'wink',\n    'smirk',\n    'stuck_out_tongue',\n    'stuck_out_tongue_winking_eye',\n    'zany_face',\n    'smile',\n    'sweat_smile',\n    'laughing',\n    'innocent',\n    'blush',\n    'grin',\n    'upside_down_face',\n  ];\n  return emojis[Math.floor(Math.random() * emojis.length)];\n};\n\nexport const randomEmoji = () => {\n  const emojis = [\n    '😀',\n    '😁',\n    '😂',\n    '🤣',\n    '😃',\n    '😄',\n    '😅',\n    '😆',\n    '😉',\n    '😊',\n    '😋',\n    '😎',\n    '😍',\n    '😘',\n    '🥰',\n    '😗',\n    '😙',\n    '😚',\n    '🙂',\n    '🤗',\n    '🤩',\n    '🤔',\n    '🤨',\n    '😐',\n    '😑',\n    '😶',\n    '🙄',\n    '😏',\n    '😣',\n    '😥',\n    '😮',\n    '🤐',\n    '😯',\n    '😪',\n    '😫',\n    '🥱',\n    '😴',\n    '😌',\n    '😛',\n    '😜',\n    '😝',\n    '🤤',\n    '😒',\n    '😓',\n    '😔',\n    '😕',\n    '🙃',\n    '🤑',\n    '😲',\n    '🙁',\n    '😖',\n    '😞',\n    '😟',\n    '😤',\n    '😢',\n    '😭',\n    '😦',\n    '😧',\n    '😨',\n    '😩',\n    '🤯',\n    '😬',\n    '😰',\n    '😱',\n    '🥵',\n    '🥶',\n    '😳',\n    '🤪',\n    '😵',\n    '🥴',\n    '😠',\n    '😡',\n    '🤬',\n    '😷',\n    '🤒',\n    '🤕',\n    '🤢',\n    '🤮',\n    '🤧',\n    '😇',\n    '🥳',\n    '🥺',\n    '🤠',\n    '🤡',\n    '🤥',\n    '🤫',\n    '🤭',\n    '🧐',\n    '🤓',\n  ];\n\n  return emojis[Math.floor(Math.random() * emojis.length)];\n};\n","import { cloneDeep } from 'lodash';\nimport { STDOUT_TYPES } from '../../actionTypes';\n\nexport const initialTerminalState = [\n  {\n    type: STDOUT_TYPES.A_MESSAGE,\n    payload: {\n      data: 'Environment is ready, just click run button and enjoy!',\n    },\n  },\n];\n\nconst TerminalReducer = (state: any, action: any) => {\n  const { type, payload } = action;\n  const newState = cloneDeep(state);\n  if (type === STDOUT_TYPES.A_MESSAGE) {\n    const { data } = payload;\n    newState.push({ type: STDOUT_TYPES.A_MESSAGE, payload: { data } });\n    return newState;\n  } else if (type === STDOUT_TYPES.A_CODE_RUN) {\n    const { userName: userWhoRan, langId } = payload;\n    newState.push({\n      type: STDOUT_TYPES.A_CODE_RUN,\n      payload: { userName: userWhoRan, langId },\n    });\n    return newState;\n  } else if (type === STDOUT_TYPES.A_CODE_RUN_RESULT) {\n    const { result } = payload;\n    newState.push({\n      type: STDOUT_TYPES.A_CODE_RUN_RESULT,\n      payload: { result },\n    });\n    return newState;\n  } else if (type === STDOUT_TYPES.A_LANGUAGE_CHANGE) {\n    const { userName: userWhoChanged, language } = payload;\n    newState.push({\n      type: STDOUT_TYPES.A_LANGUAGE_CHANGE,\n      payload: { userName: userWhoChanged, language },\n    });\n    return newState;\n  }\n  return state;\n};\n\nexport default TerminalReducer;\n","import React, { useEffect, useReducer, useRef, useState } from 'react';\nimport AceEditor from 'react-ace';\nimport {\n  Box,\n  Button,\n  Flex,\n  HStack,\n  Select,\n  Spinner,\n  Tooltip,\n} from '@chakra-ui/react';\nimport axios from 'axios';\nimport { FaPlay } from 'react-icons/fa';\nimport { FiDownloadCloud, FiUploadCloud } from 'react-icons/fi';\nimport 'ace-builds/src-min-noconflict/ext-language_tools';\nimport 'ace-builds/webpack-resolver';\nimport {\n  themes,\n  languageDataWithKeys,\n  getExtensionByLangId,\n} from './editorData';\nimport { judgeUrl } from '../../api/apiInfo';\nimport { delay } from '../../utils';\nimport { Resizable } from 're-resizable';\nimport { Ace } from 'ace-builds';\n\nimport 'ace-builds/src-noconflict/mode-c_cpp';\nimport 'ace-builds/src-noconflict/mode-clojure';\nimport 'ace-builds/src-noconflict/mode-csharp';\nimport 'ace-builds/src-noconflict/mode-golang';\nimport 'ace-builds/src-noconflict/mode-java';\nimport 'ace-builds/src-noconflict/mode-javascript';\nimport 'ace-builds/src-noconflict/mode-kotlin';\nimport 'ace-builds/src-noconflict/mode-php';\nimport 'ace-builds/src-noconflict/mode-python';\nimport 'ace-builds/src-noconflict/mode-ruby';\nimport 'ace-builds/src-noconflict/mode-typescript';\n\nimport 'ace-builds/src-noconflict/theme-monokai';\nimport 'ace-builds/src-noconflict/theme-github';\nimport 'ace-builds/src-noconflict/theme-tomorrow_night';\nimport 'ace-builds/src-noconflict/theme-tomorrow';\nimport 'ace-builds/src-noconflict/theme-kuroir';\nimport 'ace-builds/src-noconflict/theme-twilight';\nimport 'ace-builds/src-noconflict/theme-xcode';\nimport 'ace-builds/src-noconflict/theme-textmate';\nimport 'ace-builds/src-noconflict/theme-solarized_dark';\nimport 'ace-builds/src-noconflict/theme-solarized_light';\nimport 'ace-builds/src-noconflict/theme-terminal';\nimport {\n  CODE_CHANGE,\n  CODE_RUN,\n  CODE_RUN_RESULT,\n  LANGUAGE_CHANGE,\n  SCodeRunEvent,\n  SCodeRunResultEvent,\n  SLanguageChangeEvent,\n  socket,\n} from '../../socket';\nimport { STDOUT_TYPES } from '../../actionTypes';\nimport Terminal from '../Terminal/Terminal';\nimport Chat, { ChatToggle } from '../Chat/Chat';\nimport TerminalReducer, {\n  initialTerminalState,\n} from '../../store/reducers/TerminalReducer';\nimport { isNotBlank } from '../../utils/stringUtils';\n\n// Object.keys(languageDataWithKeys).forEach(key => {\n//   const languageData = languageDataWithKeys[key];\n//   const { mode } = languageData;\n//   require(`ace-builds/src-noconflict/mode-${mode}`);\n//   require(`ace-builds/src-noconflict/snippets/${mode}`);\n// });\n// themes.forEach(theme => require(`ace-builds/src-noconflict/theme-${theme}`));\n\ninterface CodeEditorProps {\n  userName: string;\n}\n\nconst getDefaultMode = (id: string) => {\n  const data = languageDataWithKeys[id];\n  if (data && data.defaultValue) return data.defaultValue;\n};\n\nconst getDefaultLangId = () => 62;\n\nconst CodeEditor = ({ userName }: CodeEditorProps) => {\n  const [mode, setMode] = useState('java');\n  const [langId, setLangId] = useState(getDefaultLangId());\n  const [codeValue, setCodeValue] = useState(getDefaultMode(langId + ''));\n  const [theme, setTheme] = useState('monokai');\n  const [isCompiling, setIsCompiling] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [codeError, setCodeError] = useState('');\n  const [isChatOpen, setIsChatOpen] = useState(true);\n  const editorRef = useRef<any>(null);\n\n  const [stdoutOutput, dispatchStdoutOutput] = useReducer(\n    TerminalReducer,\n    initialTerminalState,\n  );\n\n  useEffect(() => {\n    socket.on(CODE_CHANGE, (newValue: string) => {\n      setCodeValue(newValue);\n    });\n\n    socket.on(CODE_RUN, (data: SCodeRunEvent) => {\n      dispatchStdoutOutput(data);\n    });\n\n    socket.on(LANGUAGE_CHANGE, (data: SLanguageChangeEvent) => {\n      const {\n        id,\n        mode: newMode,\n        codeValue: newCodeValue,\n        userName: userWhoChanged,\n      } = data;\n      const language = languageDataWithKeys[id]?.name;\n      setLangId(id);\n      setMode(newMode);\n      setCodeValue(newCodeValue);\n      dispatchStdoutOutput({\n        type: STDOUT_TYPES.A_LANGUAGE_CHANGE,\n        payload: { userName: userWhoChanged, language },\n      });\n    });\n\n    socket.on(CODE_RUN_RESULT, (data: SCodeRunResultEvent) => {\n      dispatchStdoutOutput(data);\n    });\n\n    // use effect cleanup\n    return () => {\n      socket.off(CODE_CHANGE);\n      socket.off(CODE_RUN);\n      socket.off(LANGUAGE_CHANGE);\n    };\n  }, []);\n\n  // socket.on('codeselectionchange', (newRange: Ace.Range) => {\n  //   if (editorRef && editorRef.current) {\n  //     editorRef.current.editor.selection.setRange(newRange);\n  //   }\n  // });\n\n  // useEffect(() => {\n  //   editorRef?.current?.editor.gotoLine(4, 4);\n  // }, []);\n\n  const onChange = (newValue: any) => {\n    setCodeValue(newValue);\n    socket.emit(CODE_CHANGE, newValue);\n  };\n\n  const onLanguageChange = (e: React.ChangeEvent<HTMLSelectElement>): void => {\n    const id = e.target.value;\n    const langData = languageDataWithKeys[id];\n    const { mode: newMode, defaultValue: newCodeValue } = langData;\n    setLangId(+id);\n    setMode(newMode);\n    setCodeValue(newCodeValue);\n    dispatchStdoutOutput({\n      type: STDOUT_TYPES.A_LANGUAGE_CHANGE,\n      payload: { userName, language: langData.name },\n    });\n    socket.emit(LANGUAGE_CHANGE, {\n      id,\n      mode: newMode,\n      codeValue: newCodeValue,\n      userName,\n    });\n  };\n  // const onSelectionChange = (selection: any) => {\n  //   // const content = editorRef.current.editor.session.getTextRange(\n  //   //   selection.getRange(),\n  //   // );\n  //   socket.emit('codeselectionchange', selection.getRange());\n  // };\n\n  const onChatToggle = () => {\n    setIsChatOpen(!isChatOpen);\n  };\n\n  const submitCode = async (id: number, sourceCode: string | undefined) => {\n    try {\n      setIsCompiling(true);\n      const response: any = await axios.request({\n        method: 'POST',\n        url: `${judgeUrl}/submissions`,\n        data: {\n          languageId: id,\n          sourceCode: sourceCode,\n        },\n      });\n      console.log('compile: ', response);\n      return response.data.token;\n    } catch (err) {\n      console.log('Error while submitting', err);\n      setIsCompiling(false);\n      setCodeError(err);\n      setIsError(true);\n    }\n  };\n\n  const queryResults = async (token: string | undefined) => {\n    if (!token) {\n      setIsCompiling(false);\n      setIsError(true);\n      return;\n    }\n\n    await axios\n      .request({\n        method: 'GET',\n        url: `${judgeUrl}/submissions/${token}`,\n      })\n      .then(response => {\n        const { data } = response.data;\n        const { stderr, status, stdout, compile_output: compileOutput } = data;\n        console.log('results', response);\n        if (status && [1, 2, 3].includes(status.id) && isNotBlank(stdout)) {\n          console.log('we got stdout', stdout);\n          setIsCompiling(false);\n          const codeResultAction = {\n            type: STDOUT_TYPES.A_CODE_RUN_RESULT,\n            payload: { result: stdout },\n          };\n          dispatchStdoutOutput(codeResultAction);\n          socket.emit(CODE_RUN_RESULT, codeResultAction);\n        } else if (compileOutput) {\n          console.log(compileOutput);\n          const codeResultAction = {\n            type: STDOUT_TYPES.A_CODE_RUN_RESULT,\n            payload: { result: compileOutput },\n          };\n          dispatchStdoutOutput(codeResultAction);\n          socket.emit(CODE_RUN_RESULT, codeResultAction);\n\n          setIsCompiling(false);\n          setCodeError(stderr);\n          setIsError(true);\n        } else if (stderr) {\n          console.log(stderr);\n          const codeResultAction = {\n            type: STDOUT_TYPES.A_CODE_RUN_RESULT,\n            payload: { result: stderr },\n          };\n          dispatchStdoutOutput(codeResultAction);\n\n          setIsCompiling(false);\n          setCodeError(stderr);\n          setIsError(true);\n        } else {\n          console.log('something else happened');\n          setIsCompiling(false);\n        }\n      })\n      .catch(error => {\n        console.log(error);\n        setIsCompiling(false);\n        setIsError(true);\n      });\n  };\n\n  // todo pull axios stuff into another util file and convert to async await\n  const onRunClick = async () => {\n    const codeRunAction = {\n      type: STDOUT_TYPES.A_CODE_RUN,\n      payload: { userName, langId },\n    };\n    dispatchStdoutOutput(codeRunAction);\n    socket.emit(CODE_RUN, codeRunAction);\n\n    const token = await submitCode(langId, codeValue);\n\n    await delay(3000);\n    await queryResults(token);\n  };\n\n  const onDownloadClick = (e: any) => {\n    const aTag = document.createElement('a');\n    const file = new Blob([codeValue as BlobPart], {\n      type: 'text/plain;charset=utf-8',\n    });\n    aTag.href = URL.createObjectURL(file);\n    aTag.download = `code-collab_${Date.now()}.${getExtensionByLangId(\n      langId + '',\n    )}`;\n    aTag.click();\n  };\n\n  const onUploadClick = () => {\n    console.log('object');\n  };\n\n  const CodeEditorHeader = (props: any) => {\n    return (\n      <Flex\n        color='white'\n        padding={2}\n        bg='#202020'\n        className='code-header'\n        {...props}\n      >\n        <Button\n          colorScheme='blue'\n          size='sm'\n          onClick={onRunClick}\n          disabled={isCompiling}\n        >\n          <HStack>\n            <Box>Run</Box>\n            {isCompiling ? (\n              <Spinner size='sm' />\n            ) : (\n              <Box>\n                <FaPlay fontSize='10px' />\n              </Box>\n            )}\n          </HStack>\n        </Button>\n        <Select\n          cursor='pointer'\n          ml={5}\n          size='sm'\n          width='7rem'\n          borderRadius='0.375rem'\n          value={langId}\n          onChange={onLanguageChange}\n        >\n          {Object.keys(languageDataWithKeys).map(id => {\n            const langData = languageDataWithKeys[id];\n            return (\n              <option\n                key={id}\n                value={id}\n                style={{ backgroundColor: '#202020' }}\n              >\n                {langData.name}\n              </option>\n            );\n          })}\n        </Select>\n        <Select\n          cursor='pointer'\n          ml={5}\n          size='sm'\n          width='10rem'\n          borderRadius='0.375rem'\n          value={theme}\n          onChange={e => {\n            const newTheme = e.target.value;\n            setTheme(newTheme);\n          }}\n        >\n          {themes.map(_theme => (\n            <option\n              key={Math.random()}\n              value={_theme}\n              style={{ backgroundColor: '#202020' }}\n            >\n              {_theme}\n            </option>\n          ))}\n        </Select>\n        <Flex className='code-controls' color='white' ml='auto'>\n          <Tooltip hasArrow label='Download'>\n            <Button colorScheme='blue' size='sm' onClick={onDownloadClick}>\n              <FiDownloadCloud fontSize='20px' />\n            </Button>\n          </Tooltip>\n          <Tooltip hasArrow label='Upload'>\n            <Button colorScheme='blue' size='sm' onClick={onUploadClick} ml={2}>\n              <FiUploadCloud fontSize='20px' />\n            </Button>\n          </Tooltip>\n        </Flex>\n      </Flex>\n    );\n  };\n  return (\n    <>\n      <ChatToggle\n        isChatOpen={isChatOpen}\n        onChatToggle={onChatToggle}\n        style={{ marginTop: 'calc(-94px + 47px - 40px)' }}\n      />\n      <Chat shouldDisplay={isChatOpen} />\n      <Flex\n        height='100%'\n        width={isChatOpen ? '75%' : '100%'}\n        // width='100%'\n        maxWidth='100vw'\n        className='container'\n        boxSizing='border-box'\n        position='relative'\n      >\n        <Resizable\n          defaultSize={{\n            // width: '45%',\n            width: '70%',\n            height: '100%',\n          }}\n          style={{ borderRight: '10px solid #202020' }}\n          maxWidth='70%'\n          minWidth='40%'\n          // size={{\n          //   width: isChatOpen ? '45%' : '70%',\n          //   height: '100%',\n          // }}\n          enable={{\n            top: false,\n            right: true,\n            bottom: false,\n            left: false,\n            topRight: false,\n            bottomRight: false,\n            bottomLeft: false,\n            topLeft: false,\n          }}\n        >\n          <CodeEditorHeader />\n          <Flex\n            direction='column'\n            position='relative'\n            height='100%'\n            width='100%'\n            bg='cornsilk'\n          >\n            <AceEditor\n              mode={mode}\n              theme={theme}\n              height='100%'\n              width='100%'\n              onChange={onChange}\n              name='CODEEDITOR'\n              editorProps={{ $blockScrolling: true }}\n              fontSize={14}\n              showPrintMargin={true}\n              showGutter={true}\n              highlightActiveLine={true}\n              focus={true}\n              setOptions={{\n                enableBasicAutocompletion: true,\n                enableLiveAutocompletion: true,\n                enableSnippets: true,\n                showLineNumbers: true,\n                tabSize: 2,\n              }}\n              value={codeValue}\n            />\n          </Flex>\n        </Resizable>\n        <Terminal items={stdoutOutput} />\n      </Flex>\n    </>\n  );\n};\n\nexport default CodeEditor;\n","import { useLocation } from 'react-router-dom';\n\nconst useQuery = () => {\n  return new URLSearchParams(useLocation().search);\n};\n\nexport default useQuery;\n","/* eslint-disable max-len */\nimport { Flex, Text } from '@chakra-ui/react';\nimport React from 'react';\nimport { useHistory } from 'react-router';\n\nconst Logo = (props: any) => {\n  const history = useHistory();\n  let { fontSize } = props;\n\n  const items = [\n    { value: 'Code', color: '#38A169', fs: '2xl' },\n    { value: 'Collab', color: '#3182CE', fontSize: '2xl' },\n  ];\n  return (\n    <Flex\n      cursor='pointer'\n      onClick={(e: any) => {\n        history.push('/');\n      }}\n      {...props}\n    >\n      {items.map(item => {\n        const { value, color, fs } = item;\n        fontSize = fontSize || fs;\n        return (\n          <Text key={Math.random()} as='span' color={color} fontSize={fontSize}>\n            {value}\n          </Text>\n        );\n      })}\n    </Flex>\n  );\n};\n\nexport default Logo;\n","import React, { MutableRefObject, useEffect, useRef, useState } from 'react';\nimport { Button } from '@chakra-ui/button';\nimport { Flex } from '@chakra-ui/layout';\nimport { useCanvas } from './CanvasContext';\n\nconst DrawingPadNative = () => {\n  const [isDrawing, setIsDrawing] = useState(false);\n  const canvasRef = useRef() as MutableRefObject<HTMLCanvasElement>;\n  const contextRef = useRef() as MutableRefObject<CanvasRenderingContext2D>;\n  const backgroundColor = '#272822';\n  const strokeColor = '#3182CE';\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    canvas.width = window.innerWidth * 2;\n    canvas.height = window.innerHeight * 2;\n    canvas.style.width = `${window.innerWidth}px`;\n    canvas.style.height = `${window.innerHeight}px`;\n\n    const context = canvas.getContext('2d');\n    if (!context) return;\n    context.scale(2, 2);\n    context.lineCap = 'round';\n    context.strokeStyle = strokeColor;\n    context.lineWidth = 5;\n    contextRef.current = context;\n  }, []);\n\n  const startDrawing = ({ nativeEvent }: any) => {\n    const { offsetX, offsetY } = nativeEvent;\n    contextRef.current.beginPath();\n    contextRef.current.moveTo(offsetX, offsetY);\n    setIsDrawing(true);\n  };\n\n  const finishDrawing = () => {\n    contextRef.current.closePath();\n    setIsDrawing(false);\n  };\n\n  const draw = ({ nativeEvent }: any) => {\n    if (!isDrawing) {\n      return;\n    }\n    const { offsetX, offsetY } = nativeEvent;\n    contextRef.current.lineTo(offsetX, offsetY);\n    contextRef.current.stroke();\n  };\n\n  const clearCanvas = () => {\n    const canvas = canvasRef.current;\n    contextRef.current.fillStyle = backgroundColor;\n    contextRef.current.fillRect(0, 0, canvas.width, canvas.height);\n  };\n\n  return (\n    <Flex height='100%' width='100%' direction='column'>\n      <Flex bg='#202020' width='100%' padding={2}>\n        <Button size='sm' colorScheme='green' onClick={clearCanvas}>\n          Clear\n        </Button>\n        <Button ml={5} size='sm' colorScheme='green'>\n          Undo\n        </Button>\n        <Button ml={5} size='sm' colorScheme='green'>\n          Save\n        </Button>\n        <Button ml={5} size='sm' colorScheme='green'>\n          Load\n        </Button>\n      </Flex>\n      <canvas\n        ref={canvasRef}\n        onMouseDown={startDrawing}\n        onMouseUp={finishDrawing}\n        onMouseMove={draw}\n      />\n    </Flex>\n  );\n};\n\nexport default DrawingPadNative;\n","import React, { useEffect, useReducer } from 'react';\nimport {\n  Box,\n  Button,\n  Flex,\n  HStack,\n  Tab,\n  TabList,\n  TabPanel,\n  TabPanels,\n  Tabs,\n  useToast,\n} from '@chakra-ui/react';\nimport CodeEditor from '../CodeEditor/CodeEditor';\nimport DrawingPad from '../DrawingPad/DrawingPad';\nimport DrawingPadExcaliDraw from '../DrawingPadExcaliDraw/DrawingPadExcaliDraw';\nimport { socket, USER_JOIN, USER_LEFT } from '../../socket/index';\nimport { RiCodeSSlashLine, RiPencilFill } from 'react-icons/ri';\nimport './PlayGround.scss';\nimport { useParams } from 'react-router';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport useQuery from '../../hooks/useQuery';\nimport Logo from '../Logo/Logo';\nimport DrawingPadNative from '../DrawingPad/DrawingPadNative';\nimport { USER_TYPES } from '../../actionTypes';\nimport { isNotBlank } from '../../utils/stringUtils';\nimport { useDispatch } from 'react-redux';\n\ninterface Params {\n  roomId: string;\n}\n\nconst PlayGround = (props: any) => {\n  const tabOptions = [\n    { value: 'Code', icon: <RiCodeSSlashLine /> },\n    { value: 'Draw', icon: <RiPencilFill /> },\n  ];\n  const { roomId }: Params = useParams();\n  const query: any = useQuery();\n  const name = query.get('user');\n  const toast = useToast();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    socket.on(USER_JOIN, (userName: string) => {\n      console.log(userName, 'joined');\n      toast({\n        title: `${userName} joined`,\n        status: 'success',\n        isClosable: true,\n      });\n    });\n\n    socket.on(USER_LEFT, (userName: string) => {\n      console.log(userName, 'left');\n      toast({\n        title: `${userName} left`,\n        status: 'error',\n        isClosable: true,\n      });\n    });\n\n    const data = {\n      room: roomId,\n      name,\n    };\n    socket.emit(USER_JOIN, data);\n\n    return () => {\n      socket.off(USER_JOIN);\n      socket.off(USER_LEFT);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (isNotBlank(name)) {\n      dispatch({\n        type: USER_TYPES.A_USERNAME_CHANGE,\n        payload: { name },\n      });\n    }\n  }, [name]);\n\n  const Navbar = () => {\n    return (\n      <Flex\n        className='navbar'\n        color='white'\n        backgroundColor='#202020'\n        alignItems='center'\n        padding={2}\n      >\n        <Logo mr={3} />\n        <CopyToClipboard\n          // text={`${window.location.origin}/#/${roomId}`}\n          text={roomId}\n          onCopy={(link, _) => {\n            console.log('copied', link);\n            toast({\n              // title: `Copied link, you can share it with your friend now. ${link}`,\n              title: `Copied roomId: ${roomId}`,\n              status: 'success',\n              isClosable: true,\n              position: 'top',\n            });\n          }}\n        >\n          <Button colorScheme='green' size='sm'>\n            Copy RoomId\n          </Button>\n        </CopyToClipboard>\n      </Flex>\n    );\n  };\n\n  return (\n    <Flex\n      className='playground'\n      direction='column'\n      height='100vh'\n      width='100vw'\n      maxHeight='100vh'\n      maxWidth='100vw'\n      overflow='hidden'\n    >\n      <Navbar />\n      <Flex className='playground-inner' flex='1'>\n        <Tabs\n          variant='enclosed-colored'\n          bgColor='#272822'\n          borderBottomColor='#202020'\n          width='100%'\n          display='flex'\n          flexDirection='column'\n          defaultIndex={0}\n          isLazy\n        >\n          <TabList>\n            {tabOptions.map(item => (\n              <Tab\n                key={Math.random()}\n                className='tab_mine'\n                bg='#272822'\n                color='grey'\n                borderTop='none'\n                borderLeft='none'\n                borderRight='none'\n                borderBottom='none'\n                _selected={{\n                  color: 'white',\n                  bg: '#202020',\n                  border: 'none',\n                  borderTop: '3px solid green',\n                  borderTopColor: 'blue.500',\n                }}\n              >\n                <HStack>\n                  <Box>{item.icon}</Box>\n                  <Box>{item.value}</Box>\n                </HStack>\n              </Tab>\n            ))}\n          </TabList>\n          <TabPanels flex='1 1 auto'>\n            <TabPanel\n              padding={0}\n              height='100%'\n              maxHeight='calc(100vh - 94px)' // temp fix for the overflow on Terminal component\n              className='tab_panel_code_editor_wrapper'\n              position='relative'\n            >\n              <CodeEditor userName={name} />\n            </TabPanel>\n            <TabPanel padding={0} height='100%'>\n              {/* <DrawingPad /> */}\n              <DrawingPadNative />\n              {/* <DrawingPadExcaliDraw /> */}\n            </TabPanel>\n          </TabPanels>\n        </Tabs>\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default PlayGround;\n","import {\n  Button,\n  Flex,\n  Heading,\n  Input,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  Spacer,\n  Text,\n  useDisclosure,\n} from '@chakra-ui/react';\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useHistory } from 'react-router';\nimport Typist from 'react-typist';\nimport { v4, validate } from 'uuid';\nimport Logo from '../Logo/Logo';\n\nconst CreateButtonModal = (props: any) => {\n  const history = useHistory();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [userName, setUserName] = useState('');\n  const [createButtonDisabled, setCreateButtonDisabled] = useState(true);\n\n  const onChange = (e: any) => {\n    const name = e.target.value;\n    setUserName(name);\n    setCreateButtonDisabled(!(name && name.length > 0));\n  };\n\n  const redirect = () => {\n    const id = v4();\n    history.push(`${id}?user=${userName}`);\n  };\n\n  const onCreateClick = (e: any) => {\n    redirect();\n  };\n\n  return (\n    <Flex {...props}>\n      <Button colorScheme='blue' onClick={onOpen}>\n        Create a Room\n      </Button>\n      <Modal isOpen={isOpen} onClose={onClose} isCentered>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>Create a Room</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody>\n            <Text mb={4} fontSize='md'>\n              Enter your Name:\n            </Text>\n            <Input\n              autoFocus={true}\n              value={userName}\n              onChange={onChange}\n              placeholder='Ada Lovelace'\n              onKeyDown={e => {\n                if (e.key === 'Enter' && !createButtonDisabled) {\n                  redirect();\n                }\n              }}\n            />\n          </ModalBody>\n\n          <ModalFooter>\n            <Button\n              colorScheme='blue'\n              mr={3}\n              onClick={onCreateClick}\n              disabled={createButtonDisabled}\n            >\n              Create\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </Flex>\n  );\n};\n\nconst JoinButtonModal = (props: any) => {\n  const history = useHistory();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [userName, setUserName] = useState('');\n  const [roomId, setRoomId] = useState('');\n  const [joinButtonDisabled, setJoinButtonDisabled] = useState(true);\n\n  const isInputValid = (name: string, id: string) => {\n    // return name?.length > 0 && id?.length > 0 && validate(id);\n    return name?.length > 0 && id?.length > 0;\n  };\n\n  const onChange = (e: any) => {\n    const name = e.target.value;\n    setUserName(name);\n    setJoinButtonDisabled(!isInputValid(name, roomId));\n  };\n\n  const onRoomIdChange = (e: any) => {\n    const id = e.target.value;\n    setRoomId(id);\n    setJoinButtonDisabled(!isInputValid(userName, id));\n  };\n\n  const redirect = () => {\n    history.push(`${roomId}?user=${userName}`);\n  };\n\n  const onJoinClick = (e: any) => {\n    redirect();\n  };\n\n  const onKeyDown = (e: any) => {\n    if (e.key === 'Enter' && !joinButtonDisabled) {\n      redirect();\n    }\n  };\n\n  return (\n    <Flex {...props}>\n      <Button colorScheme='green' onClick={onOpen}>\n        Join a Session\n      </Button>\n      <Modal isOpen={isOpen} onClose={onClose} isCentered>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>Join an already running session</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody>\n            <Text mb={4} fontSize='md'>\n              Enter your Name:\n            </Text>\n            <Input\n              value={userName}\n              onChange={onChange}\n              placeholder='Ada Lovelace'\n              autoFocus={true}\n              onKeyDown={onKeyDown}\n            />\n            <Text mt={4} mb={4} fontSize='md'>\n              Enter Room ID:\n            </Text>\n            <Input\n              value={roomId}\n              onChange={onRoomIdChange}\n              placeholder='xxxxxxxx-yyyy-zzzz-aaaa-bbbbbbbbbbbb'\n              onKeyDown={onKeyDown}\n            />\n          </ModalBody>\n\n          <ModalFooter>\n            <Button\n              colorScheme='blue'\n              mr={3}\n              onClick={onJoinClick}\n              disabled={joinButtonDisabled}\n            >\n              Join\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </Flex>\n  );\n};\n\nconst Home = (props: any) => {\n  return (\n    // <Flex\n    //   height='100vh'\n    //   width='100vw'\n    //   alignItems='center'\n    //   justifyContent='center'\n    //   bg='#272822'\n    //   direction='column'\n    // >\n    //   <LaunchButtonModal />\n    //   <JoinButtonModal />\n    // </Flex>\n    <Flex\n      alignItems='center'\n      justifyContent='space-evenly'\n      padding={200}\n      bg='#202020'\n      // bg='red'\n      color='white'\n    >\n      <Flex\n        direction='column'\n        width='50%'\n        alignItems='center'\n        justifyContent='center'\n        padding={10}\n        // bg='blue'\n      >\n        <Heading\n          fontSize={['32px', '48px', '48px']}\n          h={['100px', 'auto']}\n          textAlign='center'\n          mb={5}\n        >\n          <Typist\n            cursor={{ hideWhenDone: true, hideWhenDoneDelay: 1000 }}\n            avgTypingDelay={100}\n          >\n            <span style={{ fontSize: '32px', color: '#38A169' }}>\n              Collaboration Made Easy!\n            </span>\n            <Typist.Delay ms={1000} />\n            <Typist.Backspace count={24} />\n            <span style={{ color: '#38A169' }}>Code</span>\n            <span style={{ color: '#3182CE' }}>Collab</span>\n          </Typist>\n        </Heading>\n        <Flex\n          alignItems='center'\n          justifyContent='center'\n          // backgroundColor='rgba(0,0,0,0.7)'\n          // borderRadius='10px'\n          width='70%'\n          padding={5}\n          mb={5}\n        >\n          <Text textAlign='center'>\n            Create a room or join an existing room. Invite your friends and have\n            fun pair programming using live code editor and live drawing canvas.\n          </Text>\n        </Flex>\n        <Flex\n          direction='row'\n          mt={5}\n          mb={5}\n          alignItems='center'\n          justifyContent='space-around'\n        >\n          <CreateButtonModal mr={10} />\n          <JoinButtonModal />\n        </Flex>\n      </Flex>\n      <Flex className='animation'>animation goes here</Flex>\n    </Flex>\n  );\n};\n\nexport default Home;\n","import { ChakraProvider, Flex } from '@chakra-ui/react';\nimport React, { useEffect, useState } from 'react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport PlayGround from './components/playground/PlayGround';\nimport Home from './components/Home/Home';\n\nfunction App() {\n  return (\n    <ChakraProvider>\n      {/* <PlayGround /> */}\n      <Router>\n        <Switch>\n          <Route exact path='/' component={Home} />\n          <Route exact path='/:roomId' component={PlayGround} />\n        </Switch>\n      </Router>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","import { USER_TYPES } from '../../actionTypes';\n\nconst initialState = {};\n\nconst UserReducer = (state: any = initialState, action: any) => {\n  const { type, payload } = action;\n  if (type === USER_TYPES.A_USERNAME_CHANGE) {\n    return { ...state, userName: payload.name };\n  }\n  return state;\n};\n\nexport default UserReducer;\n","import { combineReducers } from 'redux';\nimport UserReducer from './UserReducer';\n\nconst rootReducer = combineReducers({\n  user: UserReducer,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/rootReducer';\n\nconst initialState = {};\n\nconst middleware = [thunk];\nconst composeEnhancers = composeWithDevTools({ trace: true, traceLimit: 25 });\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeEnhancers(applyMiddleware(...middleware)),\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}